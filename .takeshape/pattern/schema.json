{
  "$schema": "https://schema.takeshape.io/project-schema",
  "dataKey": "AQIDAHi9nATJb1LYgj5u7ShOGp43y2H6TuckRKGDlwTU4b6ryQE3F753UJC+EN+T6NA+sECOAAAAfjB8BgkqhkiG9w0BBwagbzBtAgEAMGgGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMEqXfFd6xB3H7ALoIAgEQgDsvrzZF7f6VjxJyNpDMrgKOxnBnPoX+1WefE8ckQNX4ZtZPzSBCYkNwIWY7C5Va9RIwWSxbNKNShoRfEQ==",
  "projectId": "e6942252-2648-44e1-a793-f1d77edb40c9",
  "version": 139,
  "created": "2022-07-25T07:27:22.404Z",
  "updated": "2022-10-04T13:27:07.673Z",
  "defaultLocale": "en-us",
  "locales": [
    "en-us"
  ],
  "apiVersion": "2",
  "workflows": {},
  "forms": {
    "Text": {
      "default": {
        "properties": {
          "primary": {
            "widget": "singleLineText"
          },
          "secondary": {
            "widget": "singleLineText"
          },
          "button": {
            "widget": "singleLineText"
          }
        },
        "order": [
          "primary",
          "secondary",
          "button"
        ]
      }
    },
    "NavigationLink": {
      "default": {
        "properties": {
          "name": {
            "widget": "singleLineText"
          },
          "href": {
            "widget": "singleLineText"
          }
        },
        "order": [
          "name",
          "href"
        ]
      }
    },
    "FooterNavigation": {
      "default": {
        "properties": {
          "sections": {
            "widget": "shapeArray"
          }
        },
        "order": [
          "sections"
        ]
      }
    },
    "FooterNavigationSections": {
      "default": {
        "properties": {
          "name": {
            "widget": "singleLineText"
          },
          "links": {
            "widget": "relationship"
          }
        },
        "order": [
          "name",
          "links"
        ]
      }
    },
    "FooterNewsletter": {
      "default": {
        "widget": "shapeObject",
        "properties": {
          "text": {
            "widget": "shapeObject"
          }
        },
        "order": [
          "text"
        ]
      }
    },
    "Footer": {
      "default": {
        "properties": {
          "navigation": {
            "widget": "shapeObject"
          },
          "newsletter": {
            "widget": "shapeObject"
          }
        },
        "order": [
          "navigation",
          "newsletter"
        ]
      }
    },
    "Product": {
      "default": {
        "properties": {
          "name": {
            "widget": "singleLineText"
          },
          "description": {
            "widget": "wysiwygSingleLineText"
          },
          "productComponent": {
            "widget": "dropdown"
          },
          "hideBreadcrumbs": {
            "widget": "toggleSwitch"
          },
          "hideReviews": {
            "widget": "toggleSwitch"
          },
          "hideRelatedProducts": {
            "widget": "toggleSwitch"
          },
          "additionalDetails": {
            "widget": "repeater",
            "properties": {
              "name": {
                "widget": "singleLineText"
              },
              "list": {
                "widget": "repeater",
                "properties": {
                  "item": {
                    "widget": "singleLineText"
                  }
                },
                "order": [
                  "item"
                ]
              }
            },
            "order": [
              "name",
              "list"
            ]
          },
          "sections": {
            "widget": "shapeArray"
          },
          "showDetails": {
            "widget": "toggleSwitch"
          },
          "details": {
            "widget": "relationship"
          },
          "showPolicies": {
            "widget": "toggleSwitch"
          },
          "policies": {
            "widget": "relationship"
          },
          "lineItemAttributes": {
            "widget": "relationship"
          },
          "shopifyProduct": {
            "properties": {
              "descriptionHtml": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "handle": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "redirectNewHandle": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "productType": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "tags": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "templateSuffix": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "giftCard": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "giftCardTemplateSuffix": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "title": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "vendor": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "bodyHtml": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "images": {
                "widget": "shopifyProductImages",
                "provider": "shopify"
              },
              "publishedAt": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "variants": {
                "widget": "shopifyRelationshipSummary",
                "provider": "shopify"
              }
            },
            "widget": "shopify",
            "wrapper": "shopifyServiceWrapper",
            "order": [
              "title",
              "handle",
              "descriptionHtml",
              "bodyHtml",
              "tags",
              "vendor",
              "publishedAt",
              "variants",
              "images",
              "redirectNewHandle",
              "productType",
              "templateSuffix",
              "giftCard",
              "giftCardTemplateSuffix"
            ]
          },
          "shopifyProductId": {
            "instructions": "Format: gid://shopify/Product/1111111111111",
            "label": "product ID",
            "widget": "serviceObjectId",
            "provider": "shopify",
            "serviceObjectType": "product",
            "service": "shopify"
          }
        },
        "order": [
          "name",
          "description",
          "productComponent",
          "hideBreadcrumbs",
          "hideReviews",
          "hideRelatedProducts",
          "additionalDetails",
          "sections",
          "showDetails",
          "details",
          "showPolicies",
          "policies",
          "lineItemAttributes",
          "shopifyProductId",
          "shopifyProduct"
        ]
      }
    },
    "OffersComponent": {
      "default": {
        "properties": {
          "offers": {
            "widget": "repeater",
            "properties": {
              "name": {
                "widget": "singleLineText"
              },
              "description": {
                "widget": "singleLineText"
              },
              "href": {
                "widget": "singleLineText"
              }
            },
            "order": [
              "name",
              "description",
              "href"
            ]
          }
        },
        "order": [
          "offers"
        ]
      }
    },
    "HeroComponent": {
      "default": {
        "properties": {
          "primaryText": {
            "widget": "object",
            "properties": {
              "firstRow": {
                "widget": "singleLineText"
              },
              "secondRow": {
                "widget": "singleLineText"
              }
            },
            "order": [
              "firstRow",
              "secondRow"
            ]
          },
          "secondaryText": {
            "widget": "singleLineText"
          },
          "features": {
            "widget": "repeater",
            "properties": {
              "title": {
                "widget": "singleLineText"
              },
              "description": {
                "widget": "singleLineText"
              },
              "iconName": {
                "widget": "singleLineText",
                "instructions": "https://heroicons.com/"
              }
            },
            "order": [
              "title",
              "description",
              "iconName"
            ]
          },
          "firstButton": {
            "widget": "object",
            "properties": {
              "text": {
                "widget": "singleLineText"
              },
              "url": {
                "widget": "singleLineText"
              }
            },
            "order": [
              "text",
              "url"
            ]
          },
          "secondButton": {
            "widget": "object",
            "properties": {
              "text": {
                "widget": "singleLineText"
              },
              "url": {
                "widget": "singleLineText"
              }
            },
            "order": [
              "text",
              "url"
            ]
          },
          "image": {
            "widget": "image"
          }
        },
        "order": [
          "primaryText",
          "secondaryText",
          "features",
          "firstButton",
          "secondButton",
          "image"
        ]
      }
    },
    "CollectionsComponent": {
      "default": {
        "properties": {
          "collections": {
            "widget": "repeater",
            "properties": {
              "name": {
                "widget": "singleLineText"
              },
              "description": {
                "widget": "singleLineText"
              },
              "href": {
                "widget": "singleLineText"
              },
              "image": {
                "widget": "image"
              }
            },
            "order": [
              "name",
              "description",
              "href",
              "image"
            ]
          }
        },
        "order": [
          "collections"
        ]
      }
    },
    "BackgroundImageComponent": {
      "default": {
        "properties": {
          "image": {
            "widget": "image"
          },
          "components": {
            "widget": "shapeArray"
          }
        },
        "order": [
          "image",
          "components"
        ]
      }
    },
    "SaleComponent": {
      "default": {
        "properties": {
          "primaryText": {
            "widget": "singleLineText"
          },
          "secondaryText": {
            "widget": "singleLineText"
          },
          "buttonText": {
            "widget": "singleLineText"
          }
        },
        "order": [
          "primaryText",
          "secondaryText",
          "buttonText"
        ]
      }
    },
    "TestimonialsComponent": {
      "default": {
        "properties": {
          "testimonials": {
            "widget": "repeater",
            "properties": {
              "quote": {
                "widget": "singleLineText"
              },
              "attribution": {
                "widget": "singleLineText"
              }
            },
            "order": [
              "quote",
              "attribution"
            ]
          }
        },
        "order": [
          "testimonials"
        ]
      }
    },
    "TrendingProductsComponent": {
      "default": {
        "properties": {
          "trendingProducts": {
            "widget": "repeater",
            "properties": {
              "shopifyProductId": {
                "widget": "singleLineText"
              }
            },
            "order": [
              "shopifyProductId"
            ]
          }
        },
        "order": [
          "trendingProducts"
        ]
      }
    },
    "Storefront": {
      "default": {
        "properties": {
          "seo": {
            "widget": "object",
            "properties": {
              "metaTitle": {
                "widget": "singleLineText"
              },
              "metaDescription": {
                "widget": "paragraphText"
              }
            },
            "order": [
              "metaTitle",
              "metaDescription"
            ]
          },
          "components": {
            "widget": "shapeArray"
          }
        },
        "order": [
          "seo",
          "components"
        ]
      }
    },
    "Navigation": {
      "default": {
        "properties": {
          "message": {
            "widget": "wysiwygSingleLineText"
          },
          "sections": {
            "widget": "repeater",
            "properties": {
              "name": {
                "widget": "singleLineText"
              },
              "link": {
                "widget": "relationship"
              },
              "subsections": {
                "widget": "repeater",
                "properties": {
                  "name": {
                    "widget": "singleLineText"
                  },
                  "links": {
                    "widget": "relationship"
                  }
                },
                "order": [
                  "name",
                  "links"
                ]
              }
            },
            "order": [
              "name",
              "link",
              "subsections"
            ]
          }
        },
        "order": [
          "message",
          "sections"
        ]
      }
    },
    "Collection": {
      "default": {
        "properties": {
          "name": {
            "widget": "singleLineText"
          },
          "breadcrumbTitle": {
            "widget": "singleLineText"
          },
          "parent": {
            "widget": "relationship"
          },
          "shopifyCollection": {
            "properties": {
              "descriptionHtml": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "handle": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "image": {
                "widget": "shopifyCollectionImage",
                "provider": "shopify"
              },
              "products": {
                "widget": "shopifyRelationshipSummary",
                "provider": "shopify"
              },
              "templateSuffix": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "sortOrder": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "title": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              },
              "redirectNewHandle": {
                "widget": "serviceObjectProperty",
                "provider": "shopify"
              }
            },
            "widget": "shopify",
            "wrapper": "shopifyServiceWrapper",
            "order": [
              "title",
              "handle",
              "descriptionHtml",
              "products",
              "image",
              "templateSuffix",
              "sortOrder",
              "redirectNewHandle"
            ]
          },
          "shopifyCollectionId": {
            "instructions": "Format: gid://shopify/Collection/1111111111111",
            "label": "collection ID",
            "widget": "serviceObjectId",
            "provider": "shopify",
            "serviceObjectType": "collection",
            "service": "shopify"
          }
        },
        "order": [
          "name",
          "breadcrumbTitle",
          "parent",
          "shopifyCollectionId",
          "shopifyCollection"
        ]
      }
    },
    "PageSectionMdx": {
      "default": {
        "properties": {
          "content": {
            "widget": "wysiwygTextMdx"
          }
        },
        "order": [
          "content"
        ]
      }
    },
    "PageSectionTitle": {
      "default": {
        "properties": {
          "label": {
            "widget": "singleLineText"
          },
          "heading": {
            "widget": "singleLineText"
          },
          "subheading": {
            "widget": "singleLineText"
          }
        },
        "order": [
          "label",
          "heading",
          "subheading"
        ]
      }
    },
    "Page": {
      "default": {
        "properties": {
          "title": {
            "widget": "singleLineText"
          },
          "slug": {
            "widget": "slug"
          },
          "seo": {
            "widget": "object",
            "properties": {
              "metaTitle": {
                "widget": "singleLineText"
              },
              "metaDescription": {
                "widget": "paragraphText"
              }
            },
            "order": [
              "metaTitle",
              "metaDescription"
            ]
          },
          "sections": {
            "widget": "shapeArray"
          }
        },
        "order": [
          "title",
          "slug",
          "seo",
          "sections"
        ]
      }
    },
    "CollectionComponent": {
      "default": {
        "properties": {
          "collection": {
            "widget": "relationship"
          }
        },
        "order": [
          "collection"
        ]
      }
    },
    "Link": {
      "default": {
        "properties": {
          "name": {
            "widget": "singleLineText"
          },
          "href": {
            "widget": "singleLineText"
          }
        },
        "order": [
          "name",
          "href"
        ]
      }
    },
    "LineItemAttributes": {
      "default": {
        "properties": {
          "name": {
            "widget": "singleLineText"
          },
          "attributes": {
            "widget": "repeater",
            "properties": {
              "key": {
                "widget": "singleLineText"
              },
              "values": {
                "widget": "repeater",
                "properties": {
                  "value": {
                    "widget": "singleLineText"
                  }
                },
                "order": [
                  "value"
                ]
              }
            },
            "order": [
              "key",
              "values"
            ]
          }
        },
        "order": [
          "name",
          "attributes"
        ]
      }
    },
    "Homepage": {
      "default": {
        "properties": {
          "components": {
            "widget": "shapeArray"
          }
        },
        "order": [
          "components"
        ]
      }
    },
    "FeaturesGridComponent": {
      "default": {
        "properties": {
          "preheading": {
            "widget": "singleLineText"
          },
          "heading": {
            "widget": "singleLineText"
          },
          "subheading": {
            "widget": "wysiwygSingleLineText"
          },
          "blocks": {
            "widget": "repeater",
            "properties": {
              "title": {
                "widget": "singleLineText"
              },
              "description": {
                "widget": "wysiwygSingleLineText"
              },
              "iconName": {
                "widget": "singleLineText",
                "instructions": "https://heroicons.com/"
              }
            },
            "order": [
              "title",
              "description",
              "iconName"
            ]
          }
        },
        "order": [
          "preheading",
          "heading",
          "subheading",
          "blocks"
        ]
      }
    },
    "CtaBrandPanelWithOverlappingImageComponent": {
      "default": {
        "properties": {
          "heading": {
            "widget": "singleLineText"
          },
          "description": {
            "widget": "wysiwygTextMdx"
          },
          "button": {
            "widget": "object",
            "properties": {
              "url": {
                "widget": "singleLineText"
              },
              "text": {
                "widget": "singleLineText"
              }
            },
            "order": [
              "url",
              "text"
            ]
          },
          "image": {
            "widget": "image"
          }
        },
        "order": [
          "heading",
          "description",
          "button",
          "image"
        ]
      }
    },
    "TestimonialWithOverlappingImageComponent": {
      "default": {
        "properties": {
          "quote": {
            "widget": "wysiwygTextMdx"
          },
          "source": {
            "widget": "singleLineText"
          },
          "image": {
            "widget": "image"
          }
        },
        "order": [
          "quote",
          "source",
          "image"
        ]
      }
    },
    "FaqTwoColumnsWithImageComponent": {
      "default": {
        "properties": {
          "heading": {
            "widget": "singleLineText"
          },
          "subheading": {
            "widget": "wysiwygSingleLineText"
          },
          "faQs": {
            "widget": "repeater",
            "properties": {
              "question": {
                "widget": "singleLineText"
              },
              "answer": {
                "widget": "wysiwygSingleLineText"
              }
            },
            "order": [
              "question",
              "answer"
            ]
          },
          "image": {
            "widget": "image"
          },
          "button": {
            "widget": "object",
            "properties": {
              "url": {
                "widget": "singleLineText"
              },
              "text": {
                "widget": "singleLineText"
              }
            },
            "order": [
              "url",
              "text"
            ]
          }
        },
        "order": [
          "heading",
          "subheading",
          "faQs",
          "image",
          "button"
        ]
      }
    },
    "FeaturesAlternativeSideBySideWithImagesComponent": {
      "default": {
        "properties": {
          "heading": {
            "widget": "singleLineText"
          },
          "subheading": {
            "widget": "wysiwygSingleLineText"
          },
          "repeater": {
            "widget": "repeater",
            "properties": {
              "title": {
                "widget": "singleLineText"
              },
              "text": {
                "widget": "wysiwygTextMdx"
              },
              "button": {
                "widget": "object",
                "properties": {
                  "url": {
                    "widget": "singleLineText"
                  },
                  "text": {
                    "widget": "singleLineText"
                  }
                },
                "order": [
                  "url",
                  "text"
                ]
              },
              "image": {
                "widget": "image"
              }
            },
            "order": [
              "title",
              "text",
              "button",
              "image"
            ]
          }
        },
        "order": [
          "heading",
          "subheading",
          "repeater"
        ]
      }
    },
    "NewsletterCenteredCardWithGraphicComponent": {
      "default": {
        "properties": {
          "preHeading": {
            "widget": "singleLineText"
          },
          "heading": {
            "widget": "singleLineText"
          },
          "description": {
            "widget": "wysiwygSingleLineText"
          }
        },
        "order": [
          "preHeading",
          "heading",
          "description"
        ]
      }
    },
    "FeaturesFullWidthWithVerticalImagesComponent": {
      "default": {
        "properties": {
          "heading": {
            "widget": "singleLineText"
          },
          "description": {
            "widget": "wysiwygSingleLineText"
          },
          "repeater": {
            "widget": "repeater",
            "properties": {
              "title": {
                "widget": "singleLineText"
              },
              "description": {
                "widget": "singleLineText"
              },
              "button": {
                "widget": "object",
                "properties": {
                  "url": {
                    "widget": "singleLineText"
                  },
                  "text": {
                    "widget": "singleLineText"
                  }
                },
                "order": [
                  "url",
                  "text"
                ]
              },
              "image": {
                "widget": "image"
              }
            },
            "order": [
              "title",
              "description",
              "button",
              "image"
            ]
          }
        },
        "order": [
          "heading",
          "description",
          "repeater"
        ]
      }
    },
    "HeroSectionMediumWithIllustrationComponent": {
      "default": {
        "properties": {
          "heading": {
            "widget": "singleLineText"
          },
          "description": {
            "widget": "wysiwygSingleLineText"
          },
          "button": {
            "widget": "object",
            "properties": {
              "url": {
                "widget": "singleLineText"
              },
              "text": {
                "widget": "singleLineText"
              }
            },
            "order": [
              "url",
              "text"
            ]
          },
          "image": {
            "widget": "image"
          }
        },
        "order": [
          "heading",
          "description",
          "button",
          "image"
        ]
      }
    },
    "BlogPage": {
      "default": {
        "properties": {
          "seo": {
            "widget": "object",
            "properties": {
              "metaTitle": {
                "widget": "singleLineText"
              },
              "metaDescription": {
                "widget": "paragraphText"
              }
            },
            "order": [
              "metaTitle",
              "metaDescription"
            ]
          },
          "components": {
            "widget": "shapeArray"
          }
        },
        "order": [
          "seo",
          "components"
        ]
      }
    },
    "BlogPost": {
      "default": {
        "properties": {
          "title": {
            "widget": "singleLineText"
          },
          "slug": {
            "widget": "slug"
          },
          "date": {
            "widget": "date"
          },
          "seo": {
            "widget": "object",
            "properties": {
              "metaTitle": {
                "widget": "singleLineText"
              },
              "metaDescription": {
                "widget": "paragraphText"
              }
            },
            "order": [
              "metaTitle",
              "metaDescription"
            ]
          },
          "content": {
            "widget": "wysiwygTextMdx"
          }
        },
        "order": [
          "title",
          "slug",
          "date",
          "seo",
          "content"
        ]
      }
    },
    "GlobalSettings": {
      "default": {
        "properties": {
          "header": {
            "widget": "object",
            "properties": {
              "navigation": {
                "widget": "object",
                "properties": {
                  "links": {
                    "widget": "repeater",
                    "properties": {
                      "name": {
                        "widget": "singleLineText"
                      },
                      "url": {
                        "widget": "singleLineText"
                      }
                    },
                    "order": [
                      "name",
                      "url"
                    ]
                  }
                },
                "order": [
                  "links"
                ]
              }
            },
            "order": [
              "navigation"
            ]
          },
          "footer": {
            "widget": "object",
            "properties": {
              "info": {
                "widget": "object",
                "properties": {
                  "heading": {
                    "widget": "singleLineText"
                  },
                  "description": {
                    "widget": "wysiwygSingleLineText"
                  }
                },
                "order": [
                  "heading",
                  "description"
                ]
              },
              "navigation": {
                "widget": "object",
                "properties": {
                  "sections": {
                    "widget": "repeater",
                    "properties": {
                      "title": {
                        "widget": "singleLineText"
                      },
                      "links": {
                        "widget": "repeater",
                        "properties": {
                          "name": {
                            "widget": "singleLineText"
                          },
                          "url": {
                            "widget": "singleLineText"
                          }
                        },
                        "order": [
                          "name",
                          "url"
                        ]
                      }
                    },
                    "order": [
                      "title",
                      "links"
                    ]
                  }
                },
                "order": [
                  "sections"
                ]
              }
            },
            "order": [
              "info",
              "navigation"
            ]
          }
        },
        "order": [
          "header",
          "footer"
        ]
      }
    },
    "FaqOneColumnComponent": {
      "default": {
        "properties": {
          "heading": {
            "widget": "singleLineText"
          },
          "subheading": {
            "widget": "wysiwygSingleLineText"
          },
          "faQs": {
            "widget": "repeater",
            "properties": {
              "question": {
                "widget": "singleLineText"
              },
              "answer": {
                "widget": "wysiwygSingleLineText"
              }
            },
            "order": [
              "question",
              "answer"
            ]
          }
        },
        "order": [
          "heading",
          "subheading",
          "faQs"
        ]
      }
    },
    "Policy": {
      "default": {
        "properties": {
          "title": {
            "widget": "singleLineText"
          },
          "slug": {
            "widget": "slug"
          },
          "seo": {
            "widget": "object",
            "properties": {
              "metaTitle": {
                "widget": "singleLineText"
              },
              "metaDescription": {
                "widget": "paragraphText"
              }
            },
            "order": [
              "metaTitle",
              "metaDescription"
            ]
          },
          "sections": {
            "widget": "shapeArray"
          }
        },
        "order": [
          "title",
          "slug",
          "seo",
          "sections"
        ]
      }
    }
  },
  "services": {
    "recharge": {
      "id": "recharge",
      "provider": "rest",
      "title": "Recharge",
      "namespace": "Recharge",
      "serviceType": "rest",
      "authenticationType": "bearer",
      "options": {
        "endpoint": "https://api.rechargeapps.com"
      },
      "authentication": "7uv6VUDEFYRkCJ6oZP16/vgHxKB235syqSTp//7/IiLOe4FMMVUPC0mBmQzUFX/MRRahDxVKJ4JXjsRFPxnhjhE+kfYd+2DXOJRuzdWkWywjhVQrq6Gcn5nOaGY2VfiNvP9Z8pZJsjbKWC0r2wd6pkgSm/LEneFDhGiuiD1ODkJbhnm/rzz9AymVoI6MatgVySFpw/fu8f1Z37GyFIo="
    },
    "gorgias": {
      "id": "gorgias",
      "provider": "rest",
      "title": "Gorgias",
      "namespace": "Gorgias",
      "serviceType": "rest",
      "authenticationType": "basic",
      "options": {
        "endpoint": ""
      }
    },
    "reviews-io": {
      "id": "reviews-io",
      "provider": "reviewsIo",
      "title": "REVIEWS.io",
      "namespace": "ReviewsIo",
      "serviceType": "openapi",
      "authenticationType": "searchParams",
      "options": {
        "endpoint": "https://api.reviews.io/",
        "spec": "https://raw.githubusercontent.com/takeshape/openapi-specs/main/specs/reviews.io/v0.1.0-3.yml",
        "useRestfulNames": true
      }
    },
    "klaviyo": {
      "id": "klaviyo",
      "provider": "klaviyo",
      "title": "Klaviyo",
      "namespace": "Klaviyo",
      "serviceType": "openapi",
      "authenticationType": "searchParams",
      "options": {
        "endpoint": "https://a.klaviyo.com/api/",
        "spec": "https://klaviyo-openapi.s3.amazonaws.com/spec.json"
      }
    },
    "voucherify": {
      "id": "voucherify",
      "provider": "rest",
      "title": "Voucherify",
      "namespace": "Voucherify",
      "serviceType": "rest",
      "authenticationType": "bearer",
      "options": {
        "endpoint": "https://us1.api.voucherify.io/"
      }
    },
    "referral-candy": {
      "id": "referral-candy",
      "provider": "rest",
      "title": "Referral Candy",
      "namespace": "Referral",
      "serviceType": "rest",
      "authenticationType": "none",
      "options": {
        "endpoint": "https://my.referralcandy.com/api/v1/"
      }
    },
    "shopify": {
      "title": "Shopify",
      "namespace": "Shopify",
      "provider": "shopify",
      "serviceType": "graphql",
      "authenticationType": "oauth2Bearer",
      "options": {
        "shop": "betakids",
        "endpoint": "https://betakids.myshopify.com/admin/api/2022-07/graphql.json",
        "shopifyPlus": "false",
        "legacyApp": true
      },
      "id": "shopify",
      "authentication": "8vJIE0AM1NFZerOc2JojEjekQd7l7trPyklOsN30djjpyoq+mk8gDtyjhj4FIsgfa/XCEeCifeRi5ZT/WtDeH8ikFNdC7Wmw50XId+eKu5YnAtlt98P/GIqyEATTPCznPDST5PsKVJUiu7KxB9dMbUi7MNjHPLDtuIAcsWrNxNQEscI3Q609nJR9zQ2UA+/FlRWdWzxzIRPKpZOxURnIf4hOaMPpme26aseIIuuAiZoX2ay1ihavtwW5d0QIillAkpLSMVTTqr9MGmtmIhkSMQr3baJIi+sIMqy9/5sGGjpIBGE4QzFgDBw9WT7zeUCtMl3MgrsplS2GwSzbVBF45YVjy3eFbEUKbsTW0N+pPOSzNBrvsNIDihH21DG44A4M9ilWE8O63SqWBkxxS6as+g2U+mE2EJqTeK9CUmwdy2KunRP18ig7QDU0GQ4jDLBp4682XMSJGV1cxsSTF8kzxyhi0UrBlhz8KRP5SoW3qlepfMFilp9mErT3hTawAZYwA2cIAvup5/3j40d1gozA0Uk+6XFz3C4HUoazhdiiORN/apXjLIyPuHBTMGU9zNMvewVh3iYFfxyVL+lfUiEjvb7iSdPB9ywFV4QREaAauo9TOnfrhlatAZ1BwsUz7ThN/GqBPYvAJHPG8NfHbDQveigA0Os2S51iyt/uVyg1I909JCNo/NccKWXgqb2j2rcd+zPTjTordlfZo7j6KKdcHKi3pB8y1WwBlOUCVFKORttoSE3RPnFxvsJD4JhSf2Aw8COuHhYXPe7mq5yZ9/p1kbTPtHAxa5Fw/u+8SC9bmIG47x4OXNCKzJBeikpkviFqT3qxPcYMYZHw1m79nIDYRDcFLId3/kxen5PzYDnv8sKvNvcQiCIAPnF247QgBYCbux7G8zBxJDhte1MhiURH6ijiFWqbTsK6XLqvAFZ/n6XT/bCUhKI+oot2bgggQGS6BBriX8EjbuP7En5200bCDSZiUTXLt+WMiaZHogzPV/N7sD+Y87mwP6mNS3JlntQzvdiAzsOAtMZWZlJCetxqXQx+9CpUPOB4fBfpgzFtc356jwaTD1c3+m9dsWHcSfXhKO/5igB6WJcoeLapHx1jqjs95WoDZZ4TrpmD3jg3Fxy0NrJkp1JiazrnTJ2LtgktVBcX6AeMrOfJe0tqLIc7nyzsV6k1k3qPgSE2Tw=="
    },
    "shopify-storefront": {
      "id": "shopify-storefront",
      "provider": "graphql",
      "title": "Shopify Storefront",
      "namespace": "ShopifyStorefront",
      "serviceType": "graphql",
      "authenticationType": "bearer",
      "options": {
        "endpoint": "https://betakids.myshopify.com/api/2022-07/graphql.json"
      },
      "authentication": "Gl8sq3ZmbcKcuzVa7XGkTWuIELxBg1UCc1aIzjjpUSp6TF/TiiATyEScZUAPOyFNYf9GogVYzpFKGEYQ3Kh558PBpy0mHCYSi+Zv0EXuARSefFvZcm7bFw6/9bcOlGmxxmK38kKQiWRX5Ld2fFuXn8pYJPhThPbNsw=="
    },
    "open-id": {
      "id": "open-id",
      "provider": "oidc",
      "title": "OpenID",
      "serviceType": "authentication",
      "authenticationType": "none",
      "options": {
        "idClaim": "sub",
        "configurationUrl": "https://beta-kids-admin.vercel.app/api/auth/all-access/.well-known/openid-configuration",
        "issuer": "https://beta-kids-admin.vercel.app",
        "audience": "https://api.takeshape.io/project/e6942252-2648-44e1-a793-f1d77edb40c9/open-id"
      }
    },
    "recaptcha": {
      "id": "recaptcha",
      "provider": "rest",
      "title": "ReCAPTCHA",
      "namespace": "ReCAPTCHA",
      "serviceType": "rest",
      "authenticationType": "searchParams",
      "options": {
        "endpoint": "https://www.google.com/recaptcha/api"
      }
    },
    "zendesk": {
      "id": "zendesk",
      "provider": "rest",
      "title": "Zendesk",
      "namespace": "Zendesk",
      "serviceType": "rest",
      "authenticationType": "none",
      "options": {
        "endpoint": "https://betakids.zendesk.com/"
      }
    },
    "trustpilot": {
      "id": "trustpilot",
      "provider": "rest",
      "title": "Trustpilot",
      "namespace": "Trustpilot",
      "serviceType": "rest",
      "authenticationType": "searchParams",
      "options": {
        "endpoint": "https://api.trustpilot.com/v1/product-reviews/business-units/5d2034d825ffd300017aaff5"
      },
      "authentication": "pUHyA+5fYrpIOMnezIYYEXpXResXQlyqftnVJ+jOrezZZjZK2kCSGs9CavxOqWTXg+hrckKTu4fTglMDeTS6T2U0UQttr3fn44MJbDXAhUu9spP6ZHdQsZBZRZePIEckHgr3EpKrlPBOZHHOUsGG"
    }
  },
  "queries": {
    "getLink": {
      "args": "TSGetArgs<Link>",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "Link"
      },
      "shape": "Link",
      "description": "Get a Link by ID"
    },
    "getLinkList": {
      "args": "TSListArgs<Link>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "shapeName": "Link"
      },
      "shape": "PaginatedList<Link>",
      "description": "Returns a list Link in natural order."
    },
    "getProduct": {
      "shape": "Product",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "Product"
      },
      "description": "Get a Product by ID",
      "args": "TSGetArgs<Product>"
    },
    "getProductList": {
      "shape": "PaginatedList<Product>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "shapeName": "Product"
      },
      "description": "Returns a list Product in natural order.",
      "args": "TSListArgs<Product>"
    },
    "getProductListWithTtl": {
      "args": "TSListArgs<Product>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "shapeName": "Product",
        "options": {
          "ttl": 60
        }
      },
      "shape": "PaginatedList<Product>",
      "description": "Returns a list Product in natural order."
    },
    "getFooter": {
      "args": "TSGetSingletonArgs<Footer>",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "Footer"
      },
      "shape": "Footer",
      "description": "Get a Footer by ID"
    },
    "ReviewsIo_createInvitation": {
      "args": {
        "type": "object",
        "properties": {
          "input": {
            "properties": {
              "name": {
                "type": "string"
              },
              "email": {
                "format": "email",
                "type": "string"
              },
              "order_id": {
                "type": "string"
              },
              "products": {
                "items": {
                  "@ref": "reviews-io:Product"
                },
                "type": "array"
              },
              "template_id": {
                "description": "Template identifier",
                "type": "string"
              },
              "date_send": {
                "type": "string"
              },
              "delay": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "required": []
      },
      "resolver": {
        "name": "rest:post",
        "service": "reviews-io",
        "path": "/invitation",
        "body": {
          "ops": [
            {
              "path": "$",
              "mapping": "$args.input"
            }
          ],
          "serialize": {
            "content": {
              "contentType": "application/json"
            }
          }
        },
        "headers": {
          "ops": [
            {
              "path": "content-type",
              "value": "application/json"
            }
          ]
        }
      },
      "shape": "ReviewsIo_CreateInvitationResponse"
    },
    "ReviewsIo_listProductReviews": {
      "args": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "string"
          },
          "mpn": {
            "type": "string"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "photos": {
            "type": "integer"
          },
          "verified_only": {
            "type": "integer"
          },
          "comments_only": {
            "type": "integer"
          },
          "minRating": {
            "type": "integer"
          },
          "include_unpublished_images": {
            "type": "integer"
          },
          "include_moderated": {
            "type": "integer"
          },
          "order_id": {
            "type": "string"
          },
          "min_date": {
            "type": "string"
          },
          "max_date": {
            "type": "string"
          }
        },
        "required": []
      },
      "resolver": {
        "name": "rest:get",
        "service": "reviews-io",
        "path": "/product/review",
        "searchParams": {
          "ops": [
            {
              "path": "sku",
              "mapping": "$args.sku"
            },
            {
              "path": "mpn",
              "mapping": "$args.mpn"
            },
            {
              "path": "page",
              "mapping": "$args.page"
            },
            {
              "path": "per_page",
              "mapping": "$args.per_page"
            },
            {
              "path": "photos",
              "mapping": "$args.photos"
            },
            {
              "path": "verified_only",
              "mapping": "$args.verified_only"
            },
            {
              "path": "comments_only",
              "mapping": "$args.comments_only"
            },
            {
              "path": "minRating",
              "mapping": "$args.minRating"
            },
            {
              "path": "include_unpublished_images",
              "mapping": "$args.include_unpublished_images"
            },
            {
              "path": "include_moderated",
              "mapping": "$args.include_moderated"
            },
            {
              "path": "order_id",
              "mapping": "$args.order_id"
            },
            {
              "path": "min_date",
              "mapping": "$args.min_date"
            },
            {
              "path": "max_date",
              "mapping": "$args.max_date"
            }
          ],
          "serialize": {
            "paths": {
              "sku": {
                "style": "form"
              },
              "mpn": {
                "style": "form"
              },
              "page": {
                "style": "form"
              },
              "per_page": {
                "style": "form"
              },
              "photos": {
                "style": "form"
              },
              "verified_only": {
                "style": "form"
              },
              "comments_only": {
                "style": "form"
              },
              "minRating": {
                "style": "form"
              },
              "include_unpublished_images": {
                "style": "form"
              },
              "include_moderated": {
                "style": "form"
              },
              "order_id": {
                "style": "form"
              },
              "min_date": {
                "style": "form"
              },
              "max_date": {
                "style": "form"
              }
            }
          }
        },
        "options": {
          "retry": {
            "limit": 10,
            "statusCode": [
              429
            ]
          }
        }
      },
      "shape": "ReviewsIo_ListProductReviewsResponse"
    },
    "getMyAdminCustomer": {
      "resolver": {
        "name": "graphql:query",
        "service": "shopify",
        "fieldName": "customer",
        "args": {
          "ops": [
            {
              "path": "id",
              "mapping": "$claims.sub"
            }
          ]
        }
      },
      "shape": "Shopify_Customer"
    },
    "getMyLoyaltyCard": {
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.custom.customer_access_token)",
            "id": "customer",
            "name": "graphql:query",
            "service": "shopify-storefront",
            "fieldName": "customer",
            "options": {
              "selectionSet": "{ displayName email }"
            },
            "args": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$args"
                },
                {
                  "path": "customerAccessToken",
                  "mapping": "$claims.custom.customer_access_token"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($resolvers.customer)",
            "id": "loyaltyCard",
            "name": "rest:post",
            "service": "voucherify",
            "path": {
              "ops": [
                {
                  "path": "campaignId",
                  "value": "camp_P4LtxxUSJyNCpRcq5XRmDCi5"
                }
              ],
              "serialize": {
                "template": "v1/loyalties/{campaignId}/members"
              }
            },
            "json": {
              "ops": [
                {
                  "path": "customer",
                  "ops": [
                    {
                      "path": "source_id",
                      "mapping": "$resolvers.customer.email"
                    },
                    {
                      "path": "email",
                      "mapping": "$resolvers.customer.email"
                    },
                    {
                      "path": "name",
                      "mapping": "$resolvers.customer.displayName"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$resolvers.loyaltyCard"
            }
          ]
        }
      },
      "shape": "local:Voucherify_LoyaltyCard",
      "description": "Get a loyalty card from Voucherify"
    },
    "getMyNewsletterSubscriptions": {
      "resolver": {
        "if": "!isEmpty($claims.email)",
        "name": "rest:get",
        "service": "klaviyo",
        "path": "/v2/lists",
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$resolvers[0]"
            },
            {
              "path": "[*].email",
              "mapping": "$claims.email"
            },
            {
              "path": "[*].listId",
              "mapping": "$loop.item.list_id"
            },
            {
              "path": "[*].listName",
              "mapping": "$loop.item.list_name"
            }
          ]
        },
        "options": {
          "retry": {
            "limit": 10,
            "statusCode": [
              429
            ]
          }
        }
      },
      "shape": {
        "type": "array",
        "items": {
          "@ref": "local:ProfileNewsletterStatus"
        }
      }
    },
    "getNavigation": {
      "args": "TSGetSingletonArgs<Navigation>",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "Navigation"
      },
      "shape": "Navigation",
      "description": "Get a Navigation by ID"
    },
    "getProductPageDetails": {
      "args": "TSGetArgs<ProductPageDetails>",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "ProductPageDetails"
      },
      "shape": "ProductPageDetails",
      "description": "Get a ProductPageDetails by ID"
    },
    "getProductPageDetailsList": {
      "args": "TSListArgs<ProductPageDetails>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "shapeName": "ProductPageDetails"
      },
      "shape": "PaginatedList<ProductPageDetails>",
      "description": "Returns a list ProductPageDetails in natural order."
    },
    "getProductPagePolicies": {
      "args": "TSGetArgs<ProductPagePolicies>",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "ProductPagePolicies"
      },
      "shape": "ProductPagePolicies",
      "description": "Get a ProductPagePolicies by ID"
    },
    "getProductPagePoliciesList": {
      "args": "TSListArgs<ProductPagePolicies>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "shapeName": "ProductPagePolicies"
      },
      "shape": "PaginatedList<ProductPagePolicies>",
      "description": "Returns a list ProductPagePolicies in natural order."
    },
    "collectionsWithTtl": {
      "args": {
        "type": "object",
        "properties": {
          "first": {
            "type": "integer",
            "description": "Returns up to the first `n` elements from the list."
          },
          "after": {
            "type": "string",
            "description": "Returns the elements that come after the specified cursor."
          },
          "last": {
            "type": "integer",
            "description": "Returns up to the last `n` elements from the list."
          },
          "before": {
            "type": "string",
            "description": "Returns the elements that come before the specified cursor."
          },
          "reverse": {
            "type": "boolean",
            "description": "Reverse the order of the underlying list.",
            "default": false
          },
          "sortKey": {
            "@ref": "shopify:CollectionSortKeys",
            "description": "Sort the underlying list by the given key.",
            "default": "ID"
          },
          "query": {
            "type": "string",
            "description": "Supported filter parameters:\n - `collection_type`\n - `publishable_status`\n - `published_status`\n - `title`\n - `updated_at`\n\nSee the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)\nfor more information about using filters."
          },
          "savedSearchId": {
            "type": "string",
            "@tag": "id",
            "description": "The ID of an existing saved search.\nThe search’s query string is used as the query argument.\nRefer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch)."
          }
        }
      },
      "resolver": {
        "name": "graphql:query",
        "service": "shopify",
        "fieldName": "collections",
        "options": {
          "ttl": 60
        }
      },
      "shape": "Shopify_CollectionConnection"
    },
    "collectionByHandleWithTtl": {
      "args": {
        "type": "object",
        "properties": {
          "handle": {
            "type": "string",
            "description": "The handle of the collection."
          }
        },
        "required": [
          "handle"
        ]
      },
      "resolver": {
        "name": "graphql:query",
        "service": "shopify",
        "fieldName": "collectionByHandle",
        "options": {
          "ttl": 60
        }
      },
      "shape": "Shopify_Collection"
    },
    "Shopify_products": {
      "args": {
        "type": "object",
        "properties": {
          "first": {
            "type": "integer",
            "description": "Returns up to the first `n` elements from the list."
          },
          "after": {
            "type": "string",
            "description": "Returns the elements that come after the specified cursor."
          },
          "last": {
            "type": "integer",
            "description": "Returns up to the last `n` elements from the list."
          },
          "before": {
            "type": "string",
            "description": "Returns the elements that come before the specified cursor."
          },
          "reverse": {
            "type": "boolean",
            "description": "Reverse the order of the underlying list.",
            "default": false
          },
          "sortKey": {
            "@ref": "shopify:ProductSortKeys",
            "description": "Sort the underlying list by the given key.",
            "default": "ID"
          },
          "query": {
            "type": "string",
            "description": "Supported filter parameters:\n - `barcode`\n - `created_at`\n - `delivery_profile_id`\n - `error_feedback`\n - `gift_card`\n - `has_only_composites`\n - `has_only_default_variant`\n - `id`\n - `inventory_total`\n - `is_price_reduced`\n - `out_of_stock_somewhere`\n - `price`\n - `product_type`\n - `publishable_status`\n - `published_status`\n - `sku`\n - `status`\n - `tag`\n - `tag_not`\n - `title`\n - `updated_at`\n - `vendor`\n\nSee the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)\nfor more information about using filters."
          },
          "savedSearchId": {
            "type": "string",
            "@tag": "id",
            "description": "The ID of an existing saved search.\nThe search’s query string is used as the query argument.\nRefer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch)."
          }
        }
      },
      "resolver": {
        "name": "graphql:query",
        "service": "shopify",
        "fieldName": "products"
      },
      "shape": "Shopify_ProductConnection"
    },
    "productsWithTtl": {
      "args": {
        "type": "object",
        "properties": {
          "first": {
            "type": "integer",
            "description": "Returns up to the first `n` elements from the list."
          },
          "after": {
            "type": "string",
            "description": "Returns the elements that come after the specified cursor."
          },
          "last": {
            "type": "integer",
            "description": "Returns up to the last `n` elements from the list."
          },
          "before": {
            "type": "string",
            "description": "Returns the elements that come before the specified cursor."
          },
          "reverse": {
            "type": "boolean",
            "description": "Reverse the order of the underlying list.",
            "default": false
          },
          "sortKey": {
            "@ref": "shopify:ProductSortKeys",
            "description": "Sort the underlying list by the given key.",
            "default": "ID"
          },
          "query": {
            "type": "string",
            "description": "Supported filter parameters:\n - `barcode`\n - `created_at`\n - `delivery_profile_id`\n - `error_feedback`\n - `gift_card`\n - `has_only_composites`\n - `has_only_default_variant`\n - `id`\n - `inventory_total`\n - `is_price_reduced`\n - `out_of_stock_somewhere`\n - `price`\n - `product_type`\n - `publishable_status`\n - `published_status`\n - `sku`\n - `status`\n - `tag`\n - `tag_not`\n - `title`\n - `updated_at`\n - `vendor`\n\nSee the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)\nfor more information about using filters."
          },
          "savedSearchId": {
            "type": "string",
            "@tag": "id",
            "description": "The ID of an existing saved search.\nThe search’s query string is used as the query argument.\nRefer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch)."
          }
        }
      },
      "resolver": {
        "name": "graphql:query",
        "service": "shopify",
        "fieldName": "products",
        "options": {
          "ttl": 60
        }
      },
      "shape": "Shopify_ProductConnection"
    },
    "productByHandleWithTtl": {
      "args": {
        "type": "object",
        "properties": {
          "handle": {
            "type": "string",
            "description": "The handle of the product."
          }
        },
        "required": [
          "handle"
        ]
      },
      "resolver": {
        "name": "graphql:query",
        "service": "shopify",
        "fieldName": "productByHandle",
        "options": {
          "ttl": 60
        }
      },
      "shape": "Shopify_Product"
    },
    "getStorefront": {
      "shape": "Storefront",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "Storefront"
      },
      "description": "Get a Storefront by ID",
      "args": "TSGetSingletonArgs<Storefront>"
    },
    "getCollection": {
      "args": "TSGetArgs<Collection>",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "Collection"
      },
      "shape": "Collection",
      "description": "Get a Collection by ID"
    },
    "getCollectionList": {
      "args": "TSListArgs<Collection>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "shapeName": "Collection"
      },
      "shape": "PaginatedList<Collection>",
      "description": "Returns a list Collection in natural order."
    },
    "getCollectionListWithTtl": {
      "args": "TSListArgs<Collection>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "shapeName": "Collection",
        "options": {
          "ttl": 60
        }
      },
      "shape": "PaginatedList<Collection>",
      "description": "Returns a list Collection in natural order."
    },
    "getPage": {
      "shape": "Page",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "Page"
      },
      "description": "Get a Page by ID",
      "args": "TSGetArgs<Page>"
    },
    "getPageList": {
      "shape": "PaginatedList<Page>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "shapeName": "Page"
      },
      "description": "Returns a list Page in natural order.",
      "args": "TSListArgs<Page>"
    },
    "getLineItemAttributes": {
      "args": "TSGetArgs<LineItemAttributes>",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "LineItemAttributes"
      },
      "shape": "LineItemAttributes",
      "description": "Get a LineItemAttributes by ID"
    },
    "getLineItemAttributesList": {
      "args": "TSListArgs<LineItemAttributes>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "shapeName": "LineItemAttributes"
      },
      "shape": "PaginatedList<LineItemAttributes>",
      "description": "Returns a list LineItemAttributes in natural order."
    },
    "getHomepage": {
      "shape": "Homepage",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "Homepage"
      },
      "description": "Get a Homepage by ID",
      "args": "TSGetSingletonArgs<Homepage>"
    },
    "getBlogPage": {
      "shape": "BlogPage",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "BlogPage"
      },
      "description": "Get a BlogPage by ID",
      "args": "TSGetSingletonArgs<BlogPage>"
    },
    "getBlogPost": {
      "shape": "BlogPost",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "BlogPost"
      },
      "description": "Get a BlogPost by ID",
      "args": "TSGetArgs<BlogPost>"
    },
    "getBlogPostList": {
      "shape": "PaginatedList<BlogPost>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "shapeName": "BlogPost"
      },
      "description": "Returns a list BlogPost in natural order.",
      "args": "TSListArgs<BlogPost>"
    },
    "getGlobalSettings": {
      "shape": "GlobalSettings",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "GlobalSettings"
      },
      "description": "Get a GlobalSettings by ID",
      "args": "TSGetSingletonArgs<GlobalSettings>"
    },
    "getPolicy": {
      "shape": "Policy",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "shapeName": "Policy"
      },
      "description": "Get a Policy by ID",
      "args": "TSGetArgs<Policy>"
    },
    "getPolicyList": {
      "shape": "PaginatedList<Policy>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "shapeName": "Policy"
      },
      "description": "Returns a list Policy in natural order.",
      "args": "TSListArgs<Policy>"
    },
    "Trustpilot_listProductReviews": {
      "args": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "The page to retrieve. If the page number requested is higher than the available number of pages an empty array will be returned.\nConstraints: The allowed range is minimum: 1, maximum: 2147483647\nDefault value: 1"
          },
          "perPage": {
            "type": "integer",
            "description": "The number of reviews to retrieve per page.\nConstraints: The allowed range is minimum: 1, maximum: 100\nDefault value: 20"
          },
          "productUrl": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The url of the product. Optional only if sku is provided."
          },
          "sku": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The sku of the product. Optional only if productUrl is provided."
          },
          "language": {
            "type": "string",
            "description": "Filter reviews by language."
          },
          "stars": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Filter reviews with a specific number of stars.\nConstraints: Allowed values are 1, 2, 3, 4, 5"
          },
          "locale": {
            "type": "string",
            "description": "The language in which the attributes, if any, are returned\nDefault value: en-US"
          },
          "attributeIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A comma-separated list of attribute ids"
          }
        }
      },
      "resolver": {
        "name": "rest:get",
        "service": "trustpilot",
        "path": "/reviews",
        "searchParams": {
          "ops": [
            {
              "path": "page",
              "mapping": "$args.page"
            },
            {
              "path": "perPage",
              "mapping": "$args.perPage"
            },
            {
              "path": "productUrl",
              "mapping": "$args.productUrl"
            },
            {
              "path": "sku",
              "value": "BK-31-2,BK-30"
            },
            {
              "path": "language",
              "mapping": "$args.language"
            },
            {
              "path": "stars",
              "mapping": "$args.stars"
            },
            {
              "path": "locale",
              "mapping": "$args.locale"
            },
            {
              "path": "attributeIds",
              "mapping": "$args.attributeIds"
            }
          ]
        },
        "options": {
          "retry": {
            "limit": 10,
            "statusCode": [
              429
            ]
          }
        }
      },
      "shape": "TrustpilotProductReviews"
    },
    "Trustpilot_getProductReviewsSummary": {
      "args": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The sku of the product. Optional only if productUrl is provided."
          }
        }
      },
      "resolver": {
        "name": "rest:get",
        "service": "trustpilot",
        "path": "/",
        "searchParams": {
          "ops": [
            {
              "path": "sku",
              "value": "BK-31-2,BK-30"
            }
          ]
        },
        "options": {
          "retry": {
            "limit": 10,
            "statusCode": [
              429
            ]
          }
        }
      },
      "shape": "TrustpilotProductReviewsSummary"
    },
    "Recharge_getMyPaymentMethods": {
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.email)",
            "id": "customer",
            "name": "rest:get",
            "service": "recharge",
            "path": "/customers",
            "searchParams": {
              "ops": [
                {
                  "path": "email",
                  "mapping": "$claims.email"
                },
                {
                  "path": "include",
                  "value": "payment_methods"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.customers[0].include.payment_methods"
                }
              ]
            }
          }
        ]
      },
      "shape": {
        "type": "array",
        "items": {
          "@ref": "recharge:PaymentMethod"
        }
      }
    },
    "Recharge_getMyAddressPaymentMethods": {
      "args": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "number"
          }
        },
        "required": [
          "addressId"
        ]
      },
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.email)",
            "id": "customer",
            "name": "rest:get",
            "service": "recharge",
            "path": "/customers",
            "searchParams": {
              "ops": [
                {
                  "path": "email",
                  "mapping": "$claims.email"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.customers[0]"
                }
              ]
            }
          },
          {
            "name": "rest:get",
            "id": "paymentMethods",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "addressId",
                  "mapping": "$args.addressId"
                }
              ],
              "serialize": {
                "template": "/addresses/{addressId}"
              }
            },
            "searchParams": {
              "ops": [
                {
                  "path": "include",
                  "value": "payment_methods"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": [
                    [
                      "expressionEval",
                      {
                        "expression": "$resolvers.customer.id === $currentResolver.address.customer_id ? $currentResolver.address.include.payment_methods : null"
                      }
                    ]
                  ]
                }
              ]
            }
          }
        ]
      },
      "shape": {
        "type": "array",
        "items": {
          "@ref": "recharge:PaymentMethod"
        }
      }
    },
    "Recharge_getMySubscriptions": {
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.custom.customer_access_token)",
            "id": "customer",
            "name": "graphql:query",
            "service": "shopify-storefront",
            "fieldName": "customer",
            "options": {
              "selectionSet": "{ id }"
            },
            "args": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$args"
                },
                {
                  "path": "customerAccessToken",
                  "mapping": "$claims.custom.customer_access_token"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($resolvers.customer)",
            "id": "subscriptions",
            "name": "rest:get",
            "service": "recharge",
            "path": "/subscriptions",
            "searchParams": {
              "ops": [
                {
                  "path": "shopify_customer_id",
                  "mapping": [
                    [
                      "get",
                      {
                        "path": "$resolvers.customer.id"
                      }
                    ],
                    [
                      "replace",
                      {
                        "pattern": "gid://shopify/Customer/",
                        "replacement": ""
                      }
                    ]
                  ]
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$finalResolver.subscriptions"
            }
          ]
        }
      },
      "shape": {
        "type": "array",
        "items": {
          "@ref": "recharge:Subscription"
        }
      }
    },
    "Recharge_getMySubscription": {
      "args": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.email)",
            "id": "customer",
            "name": "rest:get",
            "service": "recharge",
            "path": "/customers",
            "searchParams": {
              "ops": [
                {
                  "path": "email",
                  "mapping": "$claims.email"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.customers[0]"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($resolvers.customer)",
            "id": "subscription",
            "name": "rest:get",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.id"
                }
              ],
              "serialize": {
                "template": "/subscriptions/{id}"
              }
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": [
                    [
                      "expressionEval",
                      {
                        "expression": "$resolvers.customer.id === $currentResolver.subscription.customer_id ? $currentResolver.subscription : null"
                      }
                    ]
                  ]
                }
              ]
            }
          }
        ]
      },
      "shape": "Recharge_Subscription"
    }
  },
  "mutations": {
    "ShopifyStorefront_customerAccessTokenCreate": {
      "args": {
        "type": "object",
        "properties": {
          "input": {
            "@ref": "shopify-storefront:CustomerAccessTokenCreateInput",
            "description": "The fields used to create a customer access token."
          }
        },
        "required": [
          "input"
        ]
      },
      "resolver": {
        "name": "graphql:mutation",
        "service": "shopify-storefront",
        "fieldName": "customerAccessTokenCreate"
      },
      "shape": "ShopifyStorefront_CustomerAccessTokenCreatePayload"
    },
    "updateFooter": {
      "args": "UpdateArgs<Footer>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "Footer"
      },
      "shape": "UpdateResult<Footer>",
      "description": "Update Footer"
    },
    "updateNavigation": {
      "args": "UpdateArgs<Navigation>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "Navigation"
      },
      "shape": "UpdateResult<Navigation>",
      "description": "Update Navigation"
    },
    "Voucherify_createOrder": {
      "args": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "PAID",
              "CREATED",
              "CANCELED",
              "FULFILLED"
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "@ref": "local:Voucherify_OrderItem"
            }
          }
        }
      },
      "resolver": {
        "name": "rest:post",
        "service": "voucherify",
        "path": "v1/orders",
        "json": {
          "ops": [
            {
              "path": "customer.source_id",
              "mapping": "$args.email"
            },
            {
              "path": "status",
              "mapping": "$args.status"
            },
            {
              "path": "amount",
              "mapping": "$args.amount"
            },
            {
              "path": "items",
              "mapping": "$args.items"
            },
            {
              "path": "items[*]",
              "ops": [
                {
                  "path": "product_id",
                  "mapping": [
                    [
                      "get",
                      {
                        "path": "$parent.$value.id"
                      }
                    ]
                  ]
                },
                {
                  "path": "product",
                  "ops": [
                    {
                      "path": "override",
                      "value": true
                    },
                    {
                      "path": "name",
                      "mapping": "$parent.$parent.$value.name"
                    }
                  ]
                }
              ]
            },
            {
              "path": "items[*].id",
              "op": "remove"
            },
            {
              "path": "items[*].name",
              "op": "remove"
            }
          ]
        }
      },
      "shape": "Voucherify_Order",
      "description": "Create an order in Voucherify"
    },
    "addMembers": {
      "args": {
        "type": "object",
        "properties": {
          "input": {
            "@ref": "local:AddListMembersInput"
          },
          "list_id": {
            "type": "string"
          },
          "recaptchaToken": {
            "type": "string"
          }
        },
        "required": [
          "list_id",
          "recaptchaToken"
        ]
      },
      "resolver": {
        "compose": [
          {
            "id": "recaptcha",
            "name": "rest:post",
            "service": "recaptcha",
            "path": "/siteverify",
            "searchParams": {
              "ops": [
                {
                  "path": "response",
                  "mapping": "$args.recaptchaToken"
                }
              ]
            }
          },
          {
            "id": "klaviyoAddMembers",
            "if": "$resolvers.recaptcha.success == true",
            "name": "rest:post",
            "service": "klaviyo",
            "path": {
              "ops": [
                {
                  "path": "list_id",
                  "mapping": "$args.list_id"
                }
              ],
              "serialize": {
                "template": "/v2/list/{list_id}/members",
                "paths": {
                  "list_id": {
                    "style": "simple"
                  }
                }
              }
            },
            "body": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$args.input"
                }
              ],
              "serialize": {
                "content": {
                  "contentType": "application/json"
                }
              }
            },
            "headers": {
              "ops": [
                {
                  "path": "content-type",
                  "value": "application/json"
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "items",
              "mapping": "$finalResolver"
            }
          ]
        }
      },
      "shape": "Klaviyo_AddMembersResponse"
    },
    "subscribeMyEmailToNewsletter": {
      "args": {
        "type": "object",
        "properties": {
          "list_id": {
            "type": "string"
          }
        },
        "required": [
          "list_id"
        ]
      },
      "resolver": {
        "name": "rest:post",
        "service": "klaviyo",
        "path": {
          "ops": [
            {
              "path": "list_id",
              "mapping": "$args.list_id"
            }
          ],
          "serialize": {
            "template": "/v2/list/{list_id}/members",
            "paths": {
              "list_id": {
                "style": "simple"
              }
            }
          }
        },
        "body": {
          "ops": [
            {
              "path": "profiles[0].email",
              "mapping": "$claims.email"
            }
          ],
          "serialize": {
            "content": {
              "contentType": "application/json"
            }
          }
        },
        "headers": {
          "ops": [
            {
              "path": "content-type",
              "value": "application/json"
            }
          ]
        },
        "results": {
          "ops": [
            {
              "path": "items",
              "mapping": "$resolvers[0]"
            }
          ]
        }
      },
      "shape": "Klaviyo_AddMembersResponse"
    },
    "unsubscribeMyEmailFromNewsletter": {
      "args": {
        "type": "object",
        "properties": {
          "list_id": {
            "type": "string"
          }
        },
        "required": [
          "list_id"
        ]
      },
      "resolver": {
        "name": "rest:delete",
        "service": "klaviyo",
        "path": {
          "ops": [
            {
              "path": "list_id",
              "mapping": "$args.list_id"
            }
          ],
          "serialize": {
            "template": "/v2/list/{list_id}/members",
            "paths": {
              "list_id": {
                "style": "simple"
              }
            }
          }
        },
        "body": {
          "ops": [
            {
              "path": "emails[0]",
              "mapping": "$claims.email"
            }
          ],
          "serialize": {
            "content": {
              "contentType": "application/json"
            }
          }
        },
        "headers": {
          "ops": [
            {
              "path": "content-type",
              "value": "application/json"
            }
          ]
        }
      },
      "shape": "Klaviyo_200Ok"
    },
    "Klaviyo_removeMembers": {
      "args": {
        "type": "object",
        "properties": {
          "input": {
            "description": "\nThe profiles that you would like to remove from the list. \n\nExample:\n\n{\n  \"emails\":[\"george.washington@klaviyo.com\",\"abraham.lincoln@klaviyo.com\"],\n  \"phone_numbers\":[\"+13239169023\"],\n  \"push_tokens\":[\"03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2r\"]\n}\n",
            "properties": {
              "emails": {
                "minItems": 0,
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "phone_numbers": {
                "minItems": 0,
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "push_tokens": {
                "minItems": 0,
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "list_id": {
            "type": "string"
          }
        },
        "required": [
          "list_id"
        ]
      },
      "resolver": {
        "name": "rest:delete",
        "service": "klaviyo",
        "path": {
          "ops": [
            {
              "path": "list_id",
              "mapping": "$args.list_id"
            }
          ],
          "serialize": {
            "template": "/v2/list/{list_id}/members",
            "paths": {
              "list_id": {
                "style": "simple"
              }
            }
          }
        },
        "body": {
          "ops": [
            {
              "path": "$",
              "mapping": "$args.input"
            }
          ],
          "serialize": {
            "content": {
              "contentType": "application/json"
            }
          }
        },
        "headers": {
          "ops": [
            {
              "path": "content-type",
              "value": "application/json"
            }
          ]
        }
      },
      "shape": "Klaviyo_200Ok"
    },
    "Gorgias_createTicket": {
      "args": "CreateTicketVariables",
      "resolver": {
        "compose": [
          {
            "id": "recaptcha",
            "if": "isEmpty($claims.email)",
            "name": "rest:post",
            "service": "recaptcha",
            "path": "/siteverify",
            "searchParams": {
              "ops": [
                {
                  "path": "response",
                  "mapping": "$args.recaptchaToken"
                }
              ]
            }
          },
          {
            "id": "createTicket",
            "if": "$resolvers.recaptcha.success == true || !isEmpty($claims.email)",
            "name": "rest:post",
            "service": "gorgias",
            "path": "/tickets",
            "json": {
              "ops": [
                {
                  "path": "customer.email",
                  "mapping": "$args.email"
                },
                {
                  "path": "messages",
                  "value": [
                    {
                      "channel": "email",
                      "from_agent": false,
                      "source": {
                        "to": [
                          {
                            "address": "qw72eg20ez05v4dy@emails.gorgias.com"
                          }
                        ]
                      },
                      "via": "contact_form"
                    }
                  ]
                },
                {
                  "path": "messages[0].body_text",
                  "mapping": "$args.message"
                },
                {
                  "path": "messages[0].source.from.address",
                  "mapping": "$args.email"
                },
                {
                  "path": "messages[0].source.from.name",
                  "mapping": "$args.name"
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$finalResolver"
            }
          ]
        }
      },
      "shape": "CreateTicketResponse"
    },
    "Zendesk_createTicket": {
      "args": "CreateTicketVariables",
      "resolver": {
        "compose": [
          {
            "id": "recaptcha",
            "if": "isEmpty($claims.email)",
            "name": "rest:post",
            "service": "recaptcha",
            "path": "/siteverify",
            "searchParams": {
              "ops": [
                {
                  "path": "response",
                  "mapping": "$args.recaptchaToken"
                }
              ]
            }
          },
          {
            "id": "createTicket",
            "if": "$resolvers.recaptcha.success == true || !isEmpty($claims.email)",
            "name": "rest:post",
            "service": "zendesk",
            "path": "/api/v2/requests",
            "json": {
              "ops": [
                {
                  "path": "request.requester.name",
                  "mapping": "$args.name"
                },
                {
                  "path": "request.requester.email",
                  "mapping": "$args.email"
                },
                {
                  "path": "request.comment.body",
                  "mapping": "$args.message"
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$finalResolver.request"
            }
          ]
        }
      },
      "shape": "CreateTicketResponse"
    },
    "Shopify_products": {
      "args": {
        "type": "object",
        "properties": {
          "first": {
            "type": "integer",
            "description": "Returns up to the first `n` elements from the list."
          },
          "after": {
            "type": "string",
            "description": "Returns the elements that come after the specified cursor."
          },
          "last": {
            "type": "integer",
            "description": "Returns up to the last `n` elements from the list."
          },
          "before": {
            "type": "string",
            "description": "Returns the elements that come before the specified cursor."
          },
          "reverse": {
            "type": "boolean",
            "description": "Reverse the order of the underlying list.",
            "default": false
          },
          "sortKey": {
            "@ref": "shopify:ProductSortKeys",
            "description": "Sort the underlying list by the given key.",
            "default": "ID"
          },
          "query": {
            "type": "string",
            "description": "Supported filter parameters:\n - `barcode`\n - `created_at`\n - `delivery_profile_id`\n - `error_feedback`\n - `gift_card`\n - `has_only_composites`\n - `has_only_default_variant`\n - `id`\n - `inventory_total`\n - `is_price_reduced`\n - `out_of_stock_somewhere`\n - `price`\n - `product_type`\n - `publishable_status`\n - `published_status`\n - `sku`\n - `status`\n - `tag`\n - `tag_not`\n - `title`\n - `updated_at`\n - `vendor`\n\nSee the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)\nfor more information about using filters."
          },
          "savedSearchId": {
            "type": "string",
            "@tag": "id",
            "description": "The ID of an existing saved search.\nThe search’s query string is used as the query argument.\nRefer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch)."
          }
        }
      },
      "resolver": {
        "name": "graphql:query",
        "service": "shopify",
        "fieldName": "products"
      },
      "shape": "Shopify_ProductConnection"
    },
    "Shopify_product": {
      "args": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "@tag": "id",
            "description": "The ID of the Product to return."
          }
        },
        "required": [
          "id"
        ]
      },
      "resolver": {
        "name": "graphql:query",
        "service": "shopify",
        "fieldName": "product"
      },
      "shape": "Shopify_Product"
    },
    "createCustomer": {
      "args": {
        "type": "object",
        "properties": {
          "input": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "acceptsMarketing": {
                "type": "boolean"
              },
              "recaptchaToken": {
                "type": "string"
              }
            },
            "required": [
              "email",
              "password"
            ]
          }
        },
        "required": [
          "input"
        ]
      },
      "resolver": {
        "compose": [
          {
            "id": "recaptcha",
            "name": "rest:post",
            "service": "recaptcha",
            "path": "/siteverify",
            "searchParams": {
              "ops": [
                {
                  "path": "response",
                  "mapping": "$args.input.recaptchaToken"
                }
              ]
            }
          },
          {
            "id": "shopifyCreateCustomer",
            "if": "$resolvers.recaptcha.success == true",
            "name": "rest:post",
            "service": "shopify",
            "path": "/admin/api/2022-04/customers.json",
            "options": {
              "endpoint": "https://deluxe-sample-project.myshopify.com/"
            },
            "json": {
              "ops": [
                {
                  "path": "customer.first_name",
                  "mapping": "$args.input.firstName"
                },
                {
                  "path": "customer.last_name",
                  "mapping": "$args.input.lastName"
                },
                {
                  "path": "customer.email",
                  "mapping": "$args.input.email"
                },
                {
                  "path": "customer.password",
                  "mapping": "$args.input.password"
                },
                {
                  "path": "customer.password_confirmation",
                  "mapping": "$args.input.password"
                },
                {
                  "path": "customer.phone",
                  "mapping": "$args.input.phone"
                },
                {
                  "path": "customer.send_email_welcome",
                  "value": false
                },
                {
                  "path": "customer.verified_email",
                  "value": true
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$finalResolver"
            },
            {
              "path": "customer.id",
              "mapping": "$finalResolver.customer.admin_graphql_api_id"
            }
          ]
        }
      },
      "shape": "CreateCustomerPayload"
    },
    "recoverCustomerAccount": {
      "args": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address of the customer to recover."
          },
          "recaptchaToken": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "recaptchaToken"
        ]
      },
      "resolver": {
        "compose": [
          {
            "id": "recaptcha",
            "name": "rest:post",
            "service": "recaptcha",
            "path": "/siteverify",
            "searchParams": {
              "ops": [
                {
                  "path": "response",
                  "mapping": "$args.recaptchaToken"
                }
              ]
            }
          },
          {
            "id": "shopifyCustomerRecover",
            "if": "$resolvers.recaptcha.success == true",
            "name": "graphql:mutation",
            "service": "shopify-storefront",
            "fieldName": "customerRecover"
          }
        ]
      },
      "shape": "ShopifyStorefront_CustomerRecoverPayload"
    },
    "updateProduct": {
      "args": "UpdateArgs<ProductInterface>",
      "resolver": {
        "compose": [
          {
            "id": "createNewShopifyObject",
            "if": "isEmpty(args.input.shopifyProductId) && !isEmpty(args.input.shopifyProduct)",
            "name": "graphql:mutation",
            "service": "shopify",
            "fieldName": "productCreate",
            "options": {
              "selectionSet": "{ product { id } }"
            },
            "args": {
              "ops": [
                {
                  "path": "input.descriptionHtml",
                  "mapping": "$args.input.shopifyProduct.descriptionHtml"
                },
                {
                  "path": "input.handle",
                  "mapping": "$args.input.shopifyProduct.handle"
                },
                {
                  "path": "input.redirectNewHandle",
                  "mapping": "$args.input.shopifyProduct.redirectNewHandle"
                },
                {
                  "path": "input.productType",
                  "mapping": "$args.input.shopifyProduct.productType"
                },
                {
                  "path": "input.tags",
                  "mapping": "$args.input.shopifyProduct.tags"
                },
                {
                  "path": "input.templateSuffix",
                  "mapping": "$args.input.shopifyProduct.templateSuffix"
                },
                {
                  "path": "input.giftCard",
                  "mapping": "$args.input.shopifyProduct.giftCard"
                },
                {
                  "path": "input.giftCardTemplateSuffix",
                  "mapping": "$args.input.shopifyProduct.giftCardTemplateSuffix"
                },
                {
                  "path": "input.title",
                  "mapping": "$args.input.shopifyProduct.title"
                },
                {
                  "path": "input.vendor",
                  "mapping": "$args.input.shopifyProduct.vendor"
                },
                {
                  "path": "input.bodyHtml",
                  "mapping": "$args.input.shopifyProduct.bodyHtml"
                }
              ]
            }
          },
          {
            "id": "editTakeshape",
            "name": "takeshape:update",
            "service": "takeshape:local",
            "shapeName": "Product",
            "args": {
              "ops": [
                {
                  "path": "input",
                  "mapping": "$args.input"
                },
                {
                  "path": "input.shopifyProductId",
                  "mapping": [
                    [
                      "get",
                      {
                        "path": "$resolvers.createNewShopifyObject.product.id"
                      }
                    ],
                    [
                      "get",
                      {
                        "path": "$args.input.shopifyProductId"
                      }
                    ]
                  ]
                }
              ]
            }
          },
          {
            "id": "updateExistingShopifyObject",
            "if": "!isEmpty(args.input.shopifyProductId) && !isEmpty(args.input.shopifyProduct)",
            "name": "graphql:mutation",
            "service": "shopify",
            "fieldName": "productUpdate",
            "options": {
              "selectionSet": "{ product { id } }"
            },
            "args": {
              "ops": [
                {
                  "path": "input.descriptionHtml",
                  "mapping": "$args.input.shopifyProduct.descriptionHtml"
                },
                {
                  "path": "input.handle",
                  "mapping": "$args.input.shopifyProduct.handle"
                },
                {
                  "path": "input.redirectNewHandle",
                  "mapping": "$args.input.shopifyProduct.redirectNewHandle"
                },
                {
                  "path": "input.productType",
                  "mapping": "$args.input.shopifyProduct.productType"
                },
                {
                  "path": "input.tags",
                  "mapping": "$args.input.shopifyProduct.tags"
                },
                {
                  "path": "input.templateSuffix",
                  "mapping": "$args.input.shopifyProduct.templateSuffix"
                },
                {
                  "path": "input.giftCard",
                  "mapping": "$args.input.shopifyProduct.giftCard"
                },
                {
                  "path": "input.giftCardTemplateSuffix",
                  "mapping": "$args.input.shopifyProduct.giftCardTemplateSuffix"
                },
                {
                  "path": "input.title",
                  "mapping": "$args.input.shopifyProduct.title"
                },
                {
                  "path": "input.vendor",
                  "mapping": "$args.input.shopifyProduct.vendor"
                },
                {
                  "path": "input.bodyHtml",
                  "mapping": "$args.input.shopifyProduct.bodyHtml"
                },
                {
                  "path": "input.id",
                  "mapping": "$args.input.shopifyProductId"
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "result",
              "mapping": "$resolvers.editTakeshape.result"
            }
          ]
        }
      },
      "shape": "UpdateResult<Product>",
      "description": "Update Product. If the input has Shopify values and a Shopify ID, the Shopify product with that ID is updated.\nIf the input has Shopify values and no Shopify ID, a Shopify product is created."
    },
    "createProduct": {
      "args": "CreateArgs<ProductInterface>",
      "resolver": {
        "compose": [
          {
            "id": "shopifyCreate",
            "if": "!isEmpty(args.input.shopifyProduct)",
            "name": "graphql:mutation",
            "service": "shopify",
            "fieldName": "productCreate",
            "options": {
              "selectionSet": "{ product { id } }"
            },
            "args": {
              "ops": [
                {
                  "path": "input.descriptionHtml",
                  "mapping": "$args.input.shopifyProduct.descriptionHtml"
                },
                {
                  "path": "input.handle",
                  "mapping": "$args.input.shopifyProduct.handle"
                },
                {
                  "path": "input.redirectNewHandle",
                  "mapping": "$args.input.shopifyProduct.redirectNewHandle"
                },
                {
                  "path": "input.productType",
                  "mapping": "$args.input.shopifyProduct.productType"
                },
                {
                  "path": "input.tags",
                  "mapping": "$args.input.shopifyProduct.tags"
                },
                {
                  "path": "input.templateSuffix",
                  "mapping": "$args.input.shopifyProduct.templateSuffix"
                },
                {
                  "path": "input.giftCard",
                  "mapping": "$args.input.shopifyProduct.giftCard"
                },
                {
                  "path": "input.giftCardTemplateSuffix",
                  "mapping": "$args.input.shopifyProduct.giftCardTemplateSuffix"
                },
                {
                  "path": "input.title",
                  "mapping": "$args.input.shopifyProduct.title"
                },
                {
                  "path": "input.vendor",
                  "mapping": "$args.input.shopifyProduct.vendor"
                },
                {
                  "path": "input.bodyHtml",
                  "mapping": "$args.input.shopifyProduct.bodyHtml"
                }
              ]
            }
          },
          {
            "id": "creatingShopifyObject",
            "if": "!isEmpty(args.input.shopifyProduct)",
            "name": "takeshape:create",
            "service": "takeshape:local",
            "shapeName": "Product",
            "args": {
              "ops": [
                {
                  "path": "input",
                  "mapping": "$args.input"
                },
                {
                  "path": "input.shopifyProductId",
                  "mapping": "$resolvers.shopifyCreate.product.id"
                }
              ]
            }
          },
          {
            "id": "notCreatingShopifyObject",
            "if": "isEmpty(args.input.shopifyProduct)",
            "name": "takeshape:create",
            "service": "takeshape:local",
            "shapeName": "Product",
            "args": {
              "ops": [
                {
                  "path": "input",
                  "mapping": "$args.input"
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "result",
              "mapping": [
                [
                  "get",
                  {
                    "path": "$resolvers.creatingShopifyObject.result"
                  }
                ],
                [
                  "get",
                  {
                    "path": "$resolvers.notCreatingShopifyObject.result"
                  }
                ]
              ]
            }
          ]
        }
      },
      "shape": "CreateResult<Product>",
      "description": "Create Product. If Shopify values are provided, a Shopify product is also created and the new product ID is saved."
    },
    "duplicateProduct": {
      "args": "DuplicateArgs<Product>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "shapeName": "Product"
      },
      "shape": "DuplicateResult<Product>",
      "description": "Duplicate Product"
    },
    "deleteProduct": {
      "args": "DeleteArgs<Product>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "shapeName": "Product"
      },
      "shape": "DeleteResult<Product>",
      "description": "Delete Product"
    },
    "updateProductPageDetails": {
      "args": "UpdateArgs<ProductPageDetails>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "ProductPageDetails"
      },
      "shape": "UpdateResult<ProductPageDetails>",
      "description": "Update ProductPageDetails"
    },
    "createProductPageDetails": {
      "args": "CreateArgs<ProductPageDetails>",
      "resolver": {
        "name": "takeshape:create",
        "service": "takeshape:local",
        "shapeName": "ProductPageDetails"
      },
      "shape": "CreateResult<ProductPageDetails>",
      "description": "Create ProductPageDetails"
    },
    "duplicateProductPageDetails": {
      "args": "DuplicateArgs<ProductPageDetails>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "shapeName": "ProductPageDetails"
      },
      "shape": "DuplicateResult<ProductPageDetails>",
      "description": "Duplicate ProductPageDetails"
    },
    "deleteProductPageDetails": {
      "args": "DeleteArgs<ProductPageDetails>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "shapeName": "ProductPageDetails"
      },
      "shape": "DeleteResult<ProductPageDetails>",
      "description": "Delete ProductPageDetails"
    },
    "updateProductPagePolicies": {
      "args": "UpdateArgs<ProductPagePolicies>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "ProductPagePolicies"
      },
      "shape": "UpdateResult<ProductPagePolicies>",
      "description": "Update ProductPagePolicies"
    },
    "createProductPagePolicies": {
      "args": "CreateArgs<ProductPagePolicies>",
      "resolver": {
        "name": "takeshape:create",
        "service": "takeshape:local",
        "shapeName": "ProductPagePolicies"
      },
      "shape": "CreateResult<ProductPagePolicies>",
      "description": "Create ProductPagePolicies"
    },
    "duplicateProductPagePolicies": {
      "args": "DuplicateArgs<ProductPagePolicies>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "shapeName": "ProductPagePolicies"
      },
      "shape": "DuplicateResult<ProductPagePolicies>",
      "description": "Duplicate ProductPagePolicies"
    },
    "deleteProductPagePolicies": {
      "args": "DeleteArgs<ProductPagePolicies>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "shapeName": "ProductPagePolicies"
      },
      "shape": "DeleteResult<ProductPagePolicies>",
      "description": "Delete ProductPagePolicies"
    },
    "updateCollection": {
      "args": "UpdateArgs<CollectionInterface>",
      "resolver": {
        "compose": [
          {
            "id": "createNewShopifyObject",
            "if": "isEmpty(args.input.shopifyCollectionId) && !isEmpty(args.input.shopifyCollection)",
            "name": "graphql:mutation",
            "service": "shopify",
            "fieldName": "collectionCreate",
            "options": {
              "selectionSet": "{ collection { id } }"
            },
            "args": {
              "ops": [
                {
                  "path": "input.descriptionHtml",
                  "mapping": "$args.input.shopifyCollection.descriptionHtml"
                },
                {
                  "path": "input.handle",
                  "mapping": "$args.input.shopifyCollection.handle"
                },
                {
                  "path": "input.templateSuffix",
                  "mapping": "$args.input.shopifyCollection.templateSuffix"
                },
                {
                  "path": "input.sortOrder",
                  "mapping": "$args.input.shopifyCollection.sortOrder"
                },
                {
                  "path": "input.title",
                  "mapping": "$args.input.shopifyCollection.title"
                },
                {
                  "path": "input.redirectNewHandle",
                  "mapping": "$args.input.shopifyCollection.redirectNewHandle"
                }
              ]
            }
          },
          {
            "id": "editTakeshape",
            "name": "takeshape:update",
            "service": "takeshape:local",
            "shapeName": "Collection",
            "args": {
              "ops": [
                {
                  "path": "input",
                  "mapping": "$args.input"
                },
                {
                  "path": "input.shopifyCollectionId",
                  "mapping": [
                    [
                      "get",
                      {
                        "path": "$resolvers.createNewShopifyObject.collection.id"
                      }
                    ],
                    [
                      "get",
                      {
                        "path": "$args.input.shopifyCollectionId"
                      }
                    ]
                  ]
                }
              ]
            }
          },
          {
            "id": "updateExistingShopifyObject",
            "if": "!isEmpty(args.input.shopifyCollectionId) && !isEmpty(args.input.shopifyCollection)",
            "name": "graphql:mutation",
            "service": "shopify",
            "fieldName": "collectionUpdate",
            "options": {
              "selectionSet": "{ collection { id } }"
            },
            "args": {
              "ops": [
                {
                  "path": "input.descriptionHtml",
                  "mapping": "$args.input.shopifyCollection.descriptionHtml"
                },
                {
                  "path": "input.handle",
                  "mapping": "$args.input.shopifyCollection.handle"
                },
                {
                  "path": "input.templateSuffix",
                  "mapping": "$args.input.shopifyCollection.templateSuffix"
                },
                {
                  "path": "input.sortOrder",
                  "mapping": "$args.input.shopifyCollection.sortOrder"
                },
                {
                  "path": "input.title",
                  "mapping": "$args.input.shopifyCollection.title"
                },
                {
                  "path": "input.redirectNewHandle",
                  "mapping": "$args.input.shopifyCollection.redirectNewHandle"
                },
                {
                  "path": "input.id",
                  "mapping": "$args.input.shopifyCollectionId"
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "result",
              "mapping": "$resolvers.editTakeshape.result"
            }
          ]
        }
      },
      "shape": "UpdateResult<Collection>",
      "description": "Update Collection. If the input has Shopify values and a Shopify ID, the Shopify collection with that ID is updated.\nIf the input has Shopify values and no Shopify ID, a Shopify collection is created."
    },
    "createCollection": {
      "args": "CreateArgs<CollectionInterface>",
      "resolver": {
        "compose": [
          {
            "id": "shopifyCreate",
            "if": "!isEmpty(args.input.shopifyCollection)",
            "name": "graphql:mutation",
            "service": "shopify",
            "fieldName": "collectionCreate",
            "options": {
              "selectionSet": "{ collection { id } }"
            },
            "args": {
              "ops": [
                {
                  "path": "input.descriptionHtml",
                  "mapping": "$args.input.shopifyCollection.descriptionHtml"
                },
                {
                  "path": "input.handle",
                  "mapping": "$args.input.shopifyCollection.handle"
                },
                {
                  "path": "input.templateSuffix",
                  "mapping": "$args.input.shopifyCollection.templateSuffix"
                },
                {
                  "path": "input.sortOrder",
                  "mapping": "$args.input.shopifyCollection.sortOrder"
                },
                {
                  "path": "input.title",
                  "mapping": "$args.input.shopifyCollection.title"
                },
                {
                  "path": "input.redirectNewHandle",
                  "mapping": "$args.input.shopifyCollection.redirectNewHandle"
                }
              ]
            }
          },
          {
            "id": "creatingShopifyObject",
            "if": "!isEmpty(args.input.shopifyCollection)",
            "name": "takeshape:create",
            "service": "takeshape:local",
            "shapeName": "Collection",
            "args": {
              "ops": [
                {
                  "path": "input",
                  "mapping": "$args.input"
                },
                {
                  "path": "input.shopifyCollectionId",
                  "mapping": "$resolvers.shopifyCreate.collection.id"
                }
              ]
            }
          },
          {
            "id": "notCreatingShopifyObject",
            "if": "isEmpty(args.input.shopifyCollection)",
            "name": "takeshape:create",
            "service": "takeshape:local",
            "shapeName": "Collection",
            "args": {
              "ops": [
                {
                  "path": "input",
                  "mapping": "$args.input"
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "result",
              "mapping": [
                [
                  "get",
                  {
                    "path": "$resolvers.creatingShopifyObject.result"
                  }
                ],
                [
                  "get",
                  {
                    "path": "$resolvers.notCreatingShopifyObject.result"
                  }
                ]
              ]
            }
          ]
        }
      },
      "shape": "CreateResult<Collection>",
      "description": "Create Collection. If Shopify values are provided, a Shopify collection is also created and the new collection ID is saved."
    },
    "duplicateCollection": {
      "args": "DuplicateArgs<Collection>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "shapeName": "Collection"
      },
      "shape": "DuplicateResult<Collection>",
      "description": "Duplicate Collection"
    },
    "deleteCollection": {
      "args": "DeleteArgs<Collection>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "shapeName": "Collection"
      },
      "shape": "DeleteResult<Collection>",
      "description": "Delete Collection"
    },
    "updatePage": {
      "args": "UpdateArgs<Page>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "Page"
      },
      "shape": "UpdateResult<Page>",
      "description": "Update Page"
    },
    "createPage": {
      "args": "CreateArgs<Page>",
      "resolver": {
        "name": "takeshape:create",
        "service": "takeshape:local",
        "shapeName": "Page"
      },
      "shape": "CreateResult<Page>",
      "description": "Create Page"
    },
    "duplicatePage": {
      "args": "DuplicateArgs<Page>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "shapeName": "Page"
      },
      "shape": "DuplicateResult<Page>",
      "description": "Duplicate Page"
    },
    "deletePage": {
      "args": "DeleteArgs<Page>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "shapeName": "Page"
      },
      "shape": "DeleteResult<Page>",
      "description": "Delete Page"
    },
    "createMyProductReview": {
      "args": {
        "type": "object",
        "properties": {
          "input": {
            "properties": {
              "sku": {
                "description": "Product unique ID",
                "type": "string"
              },
              "review": {
                "type": "string"
              },
              "rating": {
                "type": "string"
              },
              "order_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "ratings": {
                "description": "Sub Ratings. JSON encoded string { \"Price\": 4, \"Quality\": 3, \"Fit\":\"Perfect\" }",
                "type": "string"
              },
              "images": {
                "description": "Images. JSON Encoded string [{\"url\": \"https://www.example.com/images/image.png\", status:\"inactive\"}]. Status is optional and defaults to \"inactive\".",
                "type": "string"
              }
            },
            "required": [
              "sku",
              "review",
              "rating"
            ],
            "type": "object"
          }
        },
        "required": []
      },
      "resolver": {
        "if": "!isEmpty($claims.sub)",
        "name": "rest:post",
        "service": "reviews-io",
        "path": "/product/review/new",
        "body": {
          "ops": [
            {
              "path": "$",
              "mapping": "$args.input"
            },
            {
              "path": "name",
              "mapping": "$claims.name"
            },
            {
              "path": "email",
              "mapping": "$claims.email"
            }
          ],
          "serialize": {
            "content": {
              "contentType": "application/json"
            }
          }
        },
        "headers": {
          "ops": [
            {
              "path": "content-type",
              "value": "application/json"
            }
          ]
        }
      },
      "shape": "ReviewsIo_CreateProductReviewNewResponse"
    },
    "updateLink": {
      "args": "UpdateArgs<Link>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "Link"
      },
      "shape": "UpdateResult<Link>",
      "description": "Update Link"
    },
    "createLink": {
      "args": "CreateArgs<Link>",
      "resolver": {
        "name": "takeshape:create",
        "service": "takeshape:local",
        "shapeName": "Link"
      },
      "shape": "CreateResult<Link>",
      "description": "Create Link"
    },
    "duplicateLink": {
      "args": "DuplicateArgs<Link>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "shapeName": "Link"
      },
      "shape": "DuplicateResult<Link>",
      "description": "Duplicate Link"
    },
    "deleteLink": {
      "args": "DeleteArgs<Link>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "shapeName": "Link"
      },
      "shape": "DeleteResult<Link>",
      "description": "Delete Link"
    },
    "updateLineItemAttributes": {
      "args": "UpdateArgs<LineItemAttributes>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "LineItemAttributes"
      },
      "shape": "UpdateResult<LineItemAttributes>",
      "description": "Update LineItemAttributes"
    },
    "createLineItemAttributes": {
      "args": "CreateArgs<LineItemAttributes>",
      "resolver": {
        "name": "takeshape:create",
        "service": "takeshape:local",
        "shapeName": "LineItemAttributes"
      },
      "shape": "CreateResult<LineItemAttributes>",
      "description": "Create LineItemAttributes"
    },
    "duplicateLineItemAttributes": {
      "args": "DuplicateArgs<LineItemAttributes>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "shapeName": "LineItemAttributes"
      },
      "shape": "DuplicateResult<LineItemAttributes>",
      "description": "Duplicate LineItemAttributes"
    },
    "deleteLineItemAttributes": {
      "args": "DeleteArgs<LineItemAttributes>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "shapeName": "LineItemAttributes"
      },
      "shape": "DeleteResult<LineItemAttributes>",
      "description": "Delete LineItemAttributes"
    },
    "updateHomepage": {
      "shape": "UpdateResult<Homepage>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "Homepage"
      },
      "description": "Update Homepage",
      "args": "UpdateArgs<Homepage>"
    },
    "updateStorefront": {
      "shape": "UpdateResult<Storefront>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "Storefront"
      },
      "description": "Update Storefront",
      "args": "UpdateArgs<Storefront>"
    },
    "updateBlogPage": {
      "shape": "UpdateResult<BlogPage>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "BlogPage"
      },
      "description": "Update BlogPage",
      "args": "UpdateArgs<BlogPage>"
    },
    "updateBlogPost": {
      "shape": "UpdateResult<BlogPost>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "BlogPost"
      },
      "description": "Update BlogPost",
      "args": "UpdateArgs<BlogPost>"
    },
    "createBlogPost": {
      "shape": "CreateResult<BlogPost>",
      "resolver": {
        "name": "takeshape:create",
        "service": "takeshape:local",
        "shapeName": "BlogPost"
      },
      "description": "Create BlogPost",
      "args": "CreateArgs<BlogPost>"
    },
    "duplicateBlogPost": {
      "shape": "DuplicateResult<BlogPost>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "shapeName": "BlogPost"
      },
      "description": "Duplicate BlogPost",
      "args": "DuplicateArgs<BlogPost>"
    },
    "deleteBlogPost": {
      "shape": "DeleteResult<BlogPost>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "shapeName": "BlogPost"
      },
      "description": "Delete BlogPost",
      "args": "DeleteArgs<BlogPost>"
    },
    "updateGlobalSettings": {
      "shape": "UpdateResult<GlobalSettings>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "GlobalSettings"
      },
      "description": "Update GlobalSettings",
      "args": "UpdateArgs<GlobalSettings>"
    },
    "updatePolicy": {
      "shape": "UpdateResult<Policy>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "shapeName": "Policy"
      },
      "description": "Update Policy",
      "args": "UpdateArgs<Policy>"
    },
    "createPolicy": {
      "shape": "CreateResult<Policy>",
      "resolver": {
        "name": "takeshape:create",
        "service": "takeshape:local",
        "shapeName": "Policy"
      },
      "description": "Create Policy",
      "args": "CreateArgs<Policy>"
    },
    "duplicatePolicy": {
      "shape": "DuplicateResult<Policy>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "shapeName": "Policy"
      },
      "description": "Duplicate Policy",
      "args": "DuplicateArgs<Policy>"
    },
    "deletePolicy": {
      "shape": "DeleteResult<Policy>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "shapeName": "Policy"
      },
      "description": "Delete Policy",
      "args": "DeleteArgs<Policy>"
    },
    "Recharge_sendMyUpdatePaymentEmail": {
      "args": {
        "type": "object",
        "properties": {
          "paymentMethodId": {
            "type": "string"
          }
        },
        "required": [
          "paymentMethodId"
        ]
      },
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.email)",
            "id": "customer",
            "name": "rest:get",
            "service": "recharge",
            "path": "/customers",
            "searchParams": {
              "ops": [
                {
                  "path": "email",
                  "mapping": "$claims.email"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.customers[0]"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($resolvers.customer)",
            "id": "notification",
            "name": "rest:post",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "customerId",
                  "mapping": "$resolvers.customer.id"
                }
              ],
              "serialize": {
                "template": "/customers/{customerId}/notifications"
              }
            },
            "json": {
              "ops": [
                {
                  "path": "type",
                  "value": "email"
                },
                {
                  "path": "template_type",
                  "value": "shopify_update_payment_information"
                },
                {
                  "path": "template_vars.payment_method_id",
                  "mapping": "$args.paymentMethodId"
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "customer_id",
              "mapping": "$resolvers.customer.id"
            }
          ]
        }
      },
      "shape": "recharge:CreateNotificationResponse"
    },
    "Recharge_updateMySubscriptionPaymentMethod": {
      "args": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "string"
          },
          "paymentMethodId": {
            "type": "string"
          }
        },
        "required": [
          "addressId",
          "paymentMethodId"
        ]
      },
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.email)",
            "id": "customer",
            "name": "rest:get",
            "service": "recharge",
            "path": "/customers",
            "searchParams": {
              "ops": [
                {
                  "path": "email",
                  "mapping": "$claims.email"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.customers[0]"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($resolvers.customer)",
            "name": "rest:get",
            "id": "address",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "addressId",
                  "mapping": "$args.addressId"
                }
              ],
              "serialize": {
                "template": "/addresses/{addressId}"
              }
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": [
                    [
                      "expressionEval",
                      {
                        "expression": "$resolvers.customer.id === $currentResolver.address.customer_id"
                      }
                    ]
                  ]
                }
              ]
            }
          },
          {
            "if": "$resolvers.address === true",
            "id": "updateAddressPaymentMethod",
            "name": "rest:put",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "addressId",
                  "mapping": "$args.addressId"
                }
              ],
              "serialize": {
                "template": "/addresses/{addressId}"
              }
            },
            "json": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.addressId"
                },
                {
                  "path": "payment_method_id",
                  "mapping": "$args.paymentMethodId"
                }
              ]
            }
          }
        ]
      },
      "shape": "recharge:Address"
    },
    "Recharge_skipMyCharge": {
      "args": {
        "type": "object",
        "properties": {
          "chargeId": {
            "type": "string"
          },
          "subscriptionId": {
            "type": "string"
          }
        },
        "required": [
          "chargeId, subscriptionId"
        ]
      },
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.email)",
            "id": "customer",
            "name": "rest:get",
            "service": "recharge",
            "path": "/customers",
            "searchParams": {
              "ops": [
                {
                  "path": "email",
                  "mapping": "$claims.email"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.customers[0]"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($resolvers.customer)",
            "id": "charge",
            "name": "rest:get",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.chargeId"
                }
              ],
              "serialize": {
                "template": "/charges/{id}"
              }
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.charge"
                }
              ]
            }
          },
          {
            "if": "$resolvers.customer.id === $resolvers.charge.customer_id",
            "name": "rest:post",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.chargeId"
                }
              ],
              "serialize": {
                "template": "/charges/{id}/skip"
              }
            },
            "json": {
              "ops": [
                {
                  "path": "subscription_id",
                  "mapping": "$args.subscriptionId"
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$finalResolver.charge"
            }
          ]
        }
      },
      "shape": "Recharge_Charge"
    },
    "Recharge_unskipMyCharge": {
      "args": {
        "type": "object",
        "properties": {
          "chargeId": {
            "type": "string"
          },
          "subscriptionId": {
            "type": "string"
          }
        },
        "required": [
          "chargeId, subscriptionId"
        ]
      },
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.email)",
            "id": "customer",
            "name": "rest:get",
            "service": "recharge",
            "path": "/customers",
            "searchParams": {
              "ops": [
                {
                  "path": "email",
                  "mapping": "$claims.email"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.customers[0]"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($resolvers.customer)",
            "id": "charge",
            "name": "rest:get",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.chargeId"
                }
              ],
              "serialize": {
                "template": "/charges/{id}"
              }
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.charge"
                }
              ]
            }
          },
          {
            "if": "$resolvers.customer.id === $resolvers.charge.customer_id",
            "name": "rest:post",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.chargeId"
                }
              ],
              "serialize": {
                "template": "/charges/{id}/unskip"
              }
            },
            "json": {
              "ops": [
                {
                  "path": "subscription_id",
                  "mapping": "$args.subscriptionId"
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$finalResolver.charge"
            }
          ]
        }
      },
      "shape": "Recharge_Charge"
    },
    "Recharge_setMyNextChargeDate": {
      "args": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string"
          },
          "date": {
            "type": "string"
          }
        },
        "required": [
          "subscriptionId",
          "date"
        ]
      },
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.email)",
            "id": "customer",
            "name": "rest:get",
            "service": "recharge",
            "path": "/customers",
            "searchParams": {
              "ops": [
                {
                  "path": "email",
                  "mapping": "$claims.email"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.customers[0]"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($resolvers.customer)",
            "id": "subscription",
            "name": "rest:get",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.subscriptionId"
                }
              ],
              "serialize": {
                "template": "/subscriptions/{id}"
              }
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.subscription"
                }
              ]
            }
          },
          {
            "if": "$resolvers.customer.id === $resolvers.subscription.customer_id",
            "name": "rest:post",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.subscriptionId"
                }
              ],
              "serialize": {
                "template": "/subscriptions/{id}/set_next_charge_date"
              }
            },
            "json": {
              "ops": [
                {
                  "path": "date",
                  "mapping": "$args.date"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.subscription"
                }
              ]
            }
          }
        ]
      },
      "shape": "Recharge_Subscription"
    },
    "Recharge_cancelMySubscription": {
      "args": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.email)",
            "id": "customer",
            "name": "rest:get",
            "service": "recharge",
            "path": "/customers",
            "searchParams": {
              "ops": [
                {
                  "path": "email",
                  "mapping": "$claims.email"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.customers[0]"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($resolvers.customer)",
            "id": "subscription",
            "name": "rest:get",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.id"
                }
              ],
              "serialize": {
                "template": "/subscriptions/{id}"
              }
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.subscription"
                }
              ]
            }
          },
          {
            "if": "$resolvers.customer.id === $resolvers.subscription.customer_id",
            "name": "rest:post",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.id"
                }
              ],
              "serialize": {
                "template": "/subscriptions/{id}/cancel"
              }
            },
            "json": {
              "ops": [
                {
                  "path": "cancellation_reason",
                  "value": "Cancelled by customer"
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$finalResolver.subscription"
            }
          ]
        }
      },
      "shape": "Recharge_Subscription"
    },
    "Recharge_updateMyAddress": {
      "args": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        },
        "required": [
          "addressId",
          "address1",
          "city",
          "countryCode",
          "firstName",
          "lastName",
          "province",
          "zip"
        ]
      },
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.email)",
            "id": "customer",
            "name": "rest:get",
            "service": "recharge",
            "path": "/customers",
            "searchParams": {
              "ops": [
                {
                  "path": "email",
                  "mapping": "$claims.email"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.customers[0]"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($resolvers.customer)",
            "id": "address",
            "name": "rest:get",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.addressId"
                }
              ],
              "serialize": {
                "template": "/addresses/{id}"
              }
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.address"
                }
              ]
            }
          },
          {
            "if": "$resolvers.customer.id === $resolvers.address.customer_id",
            "id": "updateAddress",
            "name": "rest:put",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.addressId"
                }
              ],
              "serialize": {
                "template": "/addresses/{id}"
              }
            },
            "json": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.address1"
                },
                {
                  "path": "address1",
                  "mapping": "$args.address1"
                },
                {
                  "path": "address2",
                  "mapping": "$args.address2"
                },
                {
                  "path": "city",
                  "mapping": "$args.city"
                },
                {
                  "path": "country",
                  "mapping": "$args.countryCode"
                },
                {
                  "path": "first_name",
                  "mapping": "$args.firstName"
                },
                {
                  "path": "last_name",
                  "mapping": "$args.lastName"
                },
                {
                  "path": "phone",
                  "mapping": "$args.phone"
                },
                {
                  "path": "province",
                  "mapping": "$args.province"
                },
                {
                  "path": "zip",
                  "mapping": "$args.zip"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.address"
                }
              ]
            }
          }
        ]
      },
      "shape": "recharge:Address",
      "description": "Update an address, modifying the address for all uses."
    },
    "Recharge_updateMyDeliveryFrequency": {
      "args": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string"
          },
          "frequency": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          }
        },
        "required": [
          "subscriptionId",
          "frequency",
          "unit"
        ]
      },
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.email)",
            "id": "customer",
            "name": "rest:get",
            "service": "recharge",
            "path": "/customers",
            "searchParams": {
              "ops": [
                {
                  "path": "email",
                  "mapping": "$claims.email"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.customers[0]"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($resolvers.customer)",
            "id": "subscription",
            "name": "rest:get",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.subscriptionId"
                }
              ],
              "serialize": {
                "template": "/subscriptions/{id}"
              }
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.subscription"
                }
              ]
            }
          },
          {
            "if": "$resolvers.customer.id === $resolvers.subscription.customer_id",
            "name": "rest:put",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.subscriptionId"
                }
              ],
              "serialize": {
                "template": "/subscriptions/{id}"
              }
            },
            "json": {
              "ops": [
                {
                  "path": "charge_interval_frequency",
                  "mapping": "$args.frequency"
                },
                {
                  "path": "order_interval_frequency",
                  "mapping": "$args.frequency"
                },
                {
                  "path": "order_interval_unit",
                  "mapping": "$args.unit"
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$finalResolver.subscription"
            }
          ]
        }
      },
      "shape": "recharge:Subscription"
    },
    "Recharge_updateMyProductOptions": {
      "args": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string"
          },
          "variantId": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          }
        },
        "required": [
          "subscriptionId"
        ]
      },
      "resolver": {
        "compose": [
          {
            "if": "!isEmpty($claims.email)",
            "id": "customer",
            "name": "rest:get",
            "service": "recharge",
            "path": "/customers",
            "searchParams": {
              "ops": [
                {
                  "path": "email",
                  "mapping": "$claims.email"
                }
              ]
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.customers[0]"
                }
              ]
            }
          },
          {
            "if": "!isEmpty($resolvers.customer)",
            "id": "subscription",
            "name": "rest:get",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.subscriptionId"
                }
              ],
              "serialize": {
                "template": "/subscriptions/{id}"
              }
            },
            "results": {
              "ops": [
                {
                  "path": "$",
                  "mapping": "$currentResolver.subscription"
                }
              ]
            }
          },
          {
            "if": "$resolvers.customer.id === $resolvers.subscription.customer_id",
            "name": "rest:put",
            "service": "recharge",
            "path": {
              "ops": [
                {
                  "path": "id",
                  "mapping": "$args.subscriptionId"
                }
              ],
              "serialize": {
                "template": "/subscriptions/{id}"
              }
            },
            "json": {
              "ops": [
                {
                  "path": "shopify_variant_id",
                  "mapping": "$args.variantId"
                },
                {
                  "path": "quantity",
                  "mapping": "$args.quantity"
                },
                {
                  "path": "use_shopify_variant_defaults",
                  "value": true
                }
              ]
            }
          }
        ],
        "results": {
          "ops": [
            {
              "path": "$",
              "mapping": "$finalResolver.subscription"
            }
          ]
        }
      },
      "shape": "recharge:Subscription"
    }
  },
  "shapes": {
    "Reviews_PostResponse": {
      "id": "Reviews_PostResponse",
      "name": "Reviews_PostResponse",
      "title": "Reviews_PostResponse",
      "schema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "Voucherify_OrderItem": {
      "id": "Voucherify_OrderItem",
      "name": "Voucherify_OrderItem",
      "title": "Voucherify_OrderItem",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "price": {
            "type": "integer"
          }
        }
      }
    },
    "Voucherify_Order": {
      "id": "Voucherify_Order",
      "name": "Voucherify_Order",
      "title": "Voucherify_Order",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      }
    },
    "Voucherify_LoyaltyCardStats": {
      "id": "Voucherify_LoyaltyCardStats",
      "name": "Voucherify_LoyaltyCardStats",
      "title": "Voucherify_LoyaltyCardStats",
      "schema": {
        "type": "object",
        "properties": {
          "points": {
            "type": "integer"
          },
          "balance": {
            "type": "integer"
          }
        }
      }
    },
    "Voucherify_LoyaltyCardAsset": {
      "id": "Voucherify_LoyaltyCardAsset",
      "name": "Voucherify_LoyaltyCardAsset",
      "title": "Voucherify_LoyaltyCardAsset",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      }
    },
    "Voucherify_LoyaltyCardAssets": {
      "id": "Voucherify_LoyaltyCardAssets",
      "name": "Voucherify_LoyaltyCardAssets",
      "title": "Voucherify_LoyaltyCardAssets",
      "schema": {
        "type": "object",
        "properties": {
          "qr": {
            "@ref": "local:Voucherify_LoyaltyCardAsset"
          },
          "barcode": {
            "@ref": "local:Voucherify_LoyaltyCardAsset"
          }
        }
      }
    },
    "Voucherify_LoyaltyCard": {
      "id": "Voucherify_LoyaltyCard",
      "name": "Voucherify_LoyaltyCard",
      "title": "Voucherify_LoyaltyCard",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "campaign": {
            "type": "string"
          },
          "campaign_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "loyalty_card": {
            "@ref": "local:Voucherify_LoyaltyCardStats"
          },
          "active": {
            "type": "boolean"
          },
          "assets": {
            "@ref": "local:Voucherify_LoyaltyCardAssets"
          }
        }
      }
    },
    "ProfileNewsletterStatus": {
      "id": "ProfileNewsletterStatus",
      "name": "ProfileNewsletterStatus",
      "title": "ProfileNewsletterStatus",
      "schema": {
        "type": "object",
        "properties": {
          "listId": {
            "type": "string",
            "description": "",
            "title": "List ID"
          },
          "listName": {
            "type": "string",
            "description": "",
            "title": "List Name"
          },
          "subscribed": {
            "type": "boolean",
            "description": "",
            "title": "Subscribed",
            "@resolver": {
              "name": "rest:post",
              "service": "klaviyo",
              "path": {
                "ops": [
                  {
                    "path": "list_id",
                    "mapping": "$source.listId"
                  }
                ],
                "serialize": {
                  "template": "/v2/list/{list_id}/get-members"
                }
              },
              "json": {
                "ops": [
                  {
                    "path": "$.emails[0]",
                    "mapping": "$source.email"
                  }
                ]
              },
              "results": {
                "ops": [
                  {
                    "path": "$",
                    "mapping": [
                      [
                        "expressionEval",
                        {
                          "expression": "$resolvers[0].length > 0"
                        }
                      ]
                    ]
                  }
                ]
              }
            }
          }
        },
        "required": [
          "listId",
          "listName",
          "subscribed"
        ]
      }
    },
    "GetListMembersInput": {
      "name": "GetListMembersInput",
      "id": "GetListMembersInput",
      "title": "GetListMembersInput",
      "schema": {
        "type": "object",
        "description": "\nThe profiles that you would like to remove from the list. \n\nExample:\n\n{\n  \"emails\":[\"george.washington@klaviyo.com\",\"abraham.lincoln@klaviyo.com\"],\n  \"phone_numbers\":[\"+13239169023\"],\n  \"push_tokens\":[\"03df25c845d460bcdad7802d2vf6fc1dfde97283bf75cc993eb6dca835ea2e2r\"]\n}\n",
        "properties": {
          "emails": {
            "minItems": 0,
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "phone_numbers": {
            "minItems": 0,
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "push_tokens": {
            "minItems": 0,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        }
      }
    },
    "AddListMembersInput": {
      "name": "AddListMembersInput",
      "title": "AddListMembersInput",
      "id": "AddListMembersInput",
      "schema": {
        "description": "The profiles that you would like to add to the list. Each object in the array must have an `email` or `phone_number`. You can also provide additional properties as key-value pairs.",
        "properties": {
          "profiles": {
            "minItems": 0,
            "maxItems": 100,
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              }
            },
            "type": "array"
          }
        },
        "required": [
          "profiles"
        ],
        "type": "object"
      }
    },
    "Text": {
      "id": "gl5yJyZb7",
      "name": "Text",
      "title": "Text",
      "description": "Reusable text shape",
      "schema": {
        "type": "object",
        "properties": {
          "primary": {
            "type": "string",
            "title": "Primary",
            "@mapping": "takeshape:local:Text.83c8_dKaO"
          },
          "secondary": {
            "type": "string",
            "title": "Secondary",
            "@mapping": "takeshape:local:Text._AFSl6JSe"
          },
          "button": {
            "type": "string",
            "title": "Button",
            "@mapping": "takeshape:local:Text.Hpree2AIm"
          }
        }
      }
    },
    "FooterNavigationSections": {
      "id": "RcAzYGCEA",
      "name": "FooterNavigationSections",
      "title": "Footer Navigation Sections",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "",
            "minLength": 0,
            "title": "Name",
            "@mapping": "takeshape:local:FooterNavigationSections.BeZ6ywWzG"
          },
          "links": {
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "@ref": "local:Collection"
                },
                {
                  "@ref": "local:Product"
                },
                {
                  "@ref": "local:Page"
                },
                {
                  "@ref": "local:Link"
                }
              ]
            },
            "@input": {
              "type": "array",
              "items": {
                "@ref": "local:TSRelationship"
              }
            },
            "title": "Links",
            "@backreference": {
              "enabled": false
            },
            "@mapping": "takeshape:local:FooterNavigationSections.Qq5YbOX3g"
          }
        }
      }
    },
    "FooterNavigation": {
      "id": "oFGJhE0k9",
      "name": "FooterNavigation",
      "title": "Footer Navigation",
      "schema": {
        "type": "object",
        "properties": {
          "sections": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "@ref": "local:FooterNavigationSections"
                }
              ]
            },
            "description": "",
            "title": "Sections",
            "@mapping": "takeshape:local:FooterNavigation.RcAzYGCEA"
          }
        },
        "required": [
          "sections"
        ]
      }
    },
    "FooterNewsletter": {
      "id": "kmSZztbAu",
      "name": "FooterNewsletter",
      "title": "Footer Newsletter",
      "schema": {
        "type": "object",
        "properties": {
          "text": {
            "oneOf": [
              {
                "@ref": "local:Text"
              }
            ],
            "description": "",
            "title": "Text",
            "@mapping": "takeshape:local:FooterNewsletter.lJadcfQQm"
          }
        }
      }
    },
    "Footer": {
      "id": "vT1T1S22q",
      "name": "Footer",
      "title": "Footer",
      "workflow": "default",
      "model": {
        "type": "single"
      },
      "schema": {
        "type": "object",
        "properties": {
          "navigation": {
            "title": "Navigation",
            "description": "",
            "@ref": "local:FooterNavigation",
            "@mapping": "takeshape:local:Footer.oFGJhE0k9"
          },
          "newsletter": {
            "title": "Newsletter",
            "description": "",
            "@ref": "local:FooterNewsletter",
            "@mapping": "takeshape:local:Footer.kmSZztbAu"
          }
        }
      }
    },
    "Shopify_Product": {
      "id": "Shopify_Product",
      "name": "Shopify_Product",
      "title": "Shopify_Product",
      "schema": {
        "extends": [
          {
            "@ref": "shopify:Product"
          },
          {
            "type": "object",
            "properties": {
              "reviews": {
                "@ref": "reviews-io:ListProductReviewsResponse",
                "@args": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer"
                    },
                    "per_page": {
                      "type": "integer"
                    },
                    "photos": {
                      "type": "integer"
                    },
                    "verified_only": {
                      "type": "integer"
                    },
                    "comments_only": {
                      "type": "integer"
                    },
                    "minRating": {
                      "type": "integer"
                    },
                    "include_unpublished_images": {
                      "type": "integer"
                    },
                    "include_moderated": {
                      "type": "integer"
                    },
                    "min_date": {
                      "type": "string"
                    },
                    "max_date": {
                      "type": "string"
                    }
                  },
                  "required": []
                },
                "@resolver": {
                  "name": "rest:get",
                  "service": "reviews-io",
                  "path": "/product/review",
                  "options": {
                    "ignoreErrors": true,
                    "ttl": 3600,
                    "retry": {
                      "limit": 10,
                      "statusCode": [
                        429
                      ]
                    }
                  },
                  "searchParams": {
                    "ops": [
                      {
                        "path": "sku",
                        "mapping": [
                          [
                            "get",
                            {
                              "path": "$source.id"
                            }
                          ],
                          [
                            "replace",
                            {
                              "pattern": "gid://shopify/Product/",
                              "replacement": ""
                            }
                          ]
                        ]
                      },
                      {
                        "path": "page",
                        "mapping": "$args.page"
                      },
                      {
                        "path": "per_page",
                        "mapping": "$args.per_page"
                      },
                      {
                        "path": "photos",
                        "mapping": "$args.photos"
                      },
                      {
                        "path": "verified_only",
                        "mapping": "$args.verified_only"
                      },
                      {
                        "path": "comments_only",
                        "mapping": "$args.comments_only"
                      },
                      {
                        "path": "minRating",
                        "mapping": "$args.minRating"
                      },
                      {
                        "path": "include_unpublished_images",
                        "mapping": "$args.include_unpublished_images"
                      },
                      {
                        "path": "include_moderated",
                        "mapping": "$args.include_moderated"
                      },
                      {
                        "path": "min_date",
                        "mapping": "$args.min_date"
                      },
                      {
                        "path": "max_date",
                        "mapping": "$args.max_date"
                      }
                    ],
                    "serialize": {
                      "defaults": {
                        "style": "form"
                      }
                    }
                  }
                }
              },
              "trustpilotReviews": {
                "@ref": "local:TrustpilotProductReviews",
                "@args": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "description": "The page to retrieve. If the page number requested is higher than the available number of pages an empty array will be returned.\nConstraints: The allowed range is minimum: 1, maximum: 2147483647\nDefault value: 1"
                    },
                    "perPage": {
                      "type": "integer",
                      "description": "The number of reviews to retrieve per page.\nConstraints: The allowed range is minimum: 1, maximum: 100\nDefault value: 20"
                    },
                    "productUrl": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The url of the product. Optional only if sku is provided."
                    },
                    "language": {
                      "type": "string",
                      "description": "Filter reviews by language."
                    },
                    "stars": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "Filter reviews with a specific number of stars.\nConstraints: Allowed values are 1, 2, 3, 4, 5"
                    },
                    "locale": {
                      "type": "string",
                      "description": "The language in which the attributes, if any, are returned\nDefault value: en-US"
                    },
                    "attributeIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "A comma-separated list of attribute ids"
                    }
                  }
                },
                "@resolver": {
                  "name": "rest:get",
                  "service": "trustpilot",
                  "path": "/reviews",
                  "searchParams": {
                    "ops": [
                      {
                        "path": "page",
                        "mapping": "$args.page"
                      },
                      {
                        "path": "perPage",
                        "mapping": "$args.perPage"
                      },
                      {
                        "path": "productUrl",
                        "mapping": "$args.productUrl"
                      },
                      {
                        "path": "sku",
                        "value": "BK-31-2,BK-30"
                      },
                      {
                        "path": "language",
                        "mapping": "$args.language"
                      },
                      {
                        "path": "stars",
                        "mapping": "$args.stars"
                      },
                      {
                        "path": "locale",
                        "mapping": "$args.locale"
                      },
                      {
                        "path": "attributeIds",
                        "mapping": "$args.attributeIds"
                      }
                    ]
                  }
                }
              },
              "trustpilotReviewsSummary": {
                "@ref": "local:TrustpilotProductReviewsSummary",
                "@resolver": {
                  "name": "rest:get",
                  "service": "trustpilot",
                  "path": "/",
                  "searchParams": {
                    "ops": [
                      {
                        "path": "sku",
                        "value": "BK-31-2,BK-30"
                      }
                    ]
                  }
                }
              },
              "takeshape": {
                "@ref": "local:Product",
                "@resolver": {
                  "name": "takeshape:find",
                  "service": "takeshape:local",
                  "shapeName": "Product",
                  "args": {
                    "ops": [
                      {
                        "path": "where.shopifyProductId.eq",
                        "mapping": "$source.id"
                      }
                    ]
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Shopify_Collection": {
      "id": "Shopify_Collection",
      "name": "Shopify_Collection",
      "title": "Shopify_Collection",
      "schema": {
        "extends": [
          {
            "@ref": "shopify:Collection"
          },
          {
            "type": "object",
            "properties": {
              "takeshape": {
                "@ref": "local:Collection",
                "@resolver": {
                  "name": "takeshape:find",
                  "service": "takeshape:local",
                  "shapeName": "Collection",
                  "args": {
                    "ops": [
                      {
                        "path": "where.shopifyCollectionId.eq",
                        "mapping": "$source.id"
                      }
                    ]
                  }
                }
              }
            }
          }
        ]
      }
    },
    "CreateTicketVariables": {
      "id": "CreateTicketVariables",
      "name": "CreateTicketVariables",
      "title": "CreateTicketVariables",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "recaptchaToken": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email",
          "message"
        ]
      }
    },
    "CreateTicketResponse": {
      "id": "CreateTicketResponse",
      "name": "CreateTicketResponse",
      "title": "CreateTicketResponse",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "required": [
          "id"
        ]
      }
    },
    "CreateCustomerPayload": {
      "id": "CreateCustomerPayload",
      "name": "CreateCustomerPayload",
      "title": "CreateCustomerPayload",
      "schema": {
        "type": "object",
        "properties": {
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "verified_email": {
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "ProductInterface": {
      "id": "ProductInterface",
      "name": "ProductInterface",
      "title": "ProductInterface",
      "description": "ProductInterface",
      "schema": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "_version": {
            "type": "number"
          },
          "_status": {
            "type": "string",
            "@workflow": "default"
          },
          "name": {
            "type": "string",
            "description": "Initialized with title from shopify",
            "title": "Name"
          },
          "description": {
            "type": "object",
            "@tag": "draftjs",
            "title": "Description"
          },
          "productComponent": {
            "minLength": 1,
            "type": "string",
            "oneOf": [
              {
                "enum": [
                  "withImageGrid"
                ],
                "title": "withImageGrid"
              },
              {
                "enum": [
                  "withImage"
                ],
                "title": "withImage"
              }
            ],
            "title": "Product Component"
          },
          "hideBreadcrumbs": {
            "type": "boolean",
            "default": false,
            "@l10n": false,
            "title": "Hide Breadcrumbs"
          },
          "hideReviews": {
            "default": false,
            "@l10n": false,
            "type": "boolean",
            "title": "Hide Reviews"
          },
          "hideRelatedProducts": {
            "default": false,
            "@l10n": false,
            "type": "boolean",
            "title": "Hide Related Products"
          },
          "additionalDetails": {
            "title": "Additional Details",
            "items": {
              "@ref": "local:ProductAdditionalDetailsInterface"
            },
            "type": "array"
          },
          "sections": {
            "items": {
              "oneOf": [
                {
                  "@ref": "local:FeaturesFullWidthWithVerticalImagesComponent"
                },
                {
                  "@ref": "local:NewsletterCenteredCardWithGraphicComponent"
                },
                {
                  "@ref": "local:FeaturesAlternativeSideBySideWithImagesComponent"
                },
                {
                  "@ref": "local:FaqTwoColumnsWithImageComponent"
                },
                {
                  "@ref": "local:TestimonialWithOverlappingImageComponent"
                },
                {
                  "@ref": "local:CtaBrandPanelWithOverlappingImageComponent"
                },
                {
                  "@ref": "local:FeaturesGridComponent"
                },
                {
                  "@ref": "local:FaqOneColumnComponent"
                }
              ]
            },
            "type": "array",
            "title": "Sections"
          },
          "showDetails": {
            "default": false,
            "@l10n": false,
            "type": "boolean",
            "title": "Show Details"
          },
          "details": {
            "@ref": "local:TSRelationship",
            "title": "Details",
            "@output": {
              "description": "",
              "@args": "TSRelationshipArgs",
              "@resolver": {
                "name": "takeshape:getRelated",
                "service": "takeshape:local",
                "options": {
                  "nullable": true
                }
              },
              "@ref": "local:ProductPageDetails",
              "@backreference": {
                "enabled": false
              }
            }
          },
          "showPolicies": {
            "default": false,
            "@l10n": false,
            "type": "boolean",
            "title": "Show Policies"
          },
          "policies": {
            "@ref": "local:TSRelationship",
            "title": "Policies",
            "@output": {
              "description": "",
              "@args": "TSRelationshipArgs",
              "@resolver": {
                "name": "takeshape:getRelated",
                "service": "takeshape:local",
                "options": {
                  "nullable": true
                }
              },
              "@ref": "local:ProductPagePolicies",
              "@backreference": {
                "enabled": false
              }
            }
          },
          "shopifyProductId": {
            "title": "Service ID",
            "type": "string"
          },
          "shopifyProduct": {
            "@ref": "shopify:ProductInput"
          }
        },
        "required": []
      }
    },
    "Product": {
      "id": "cpHSCQfwY",
      "name": "Product",
      "title": "Product",
      "workflow": "default",
      "model": {
        "type": "multiple"
      },
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Initialized with title from shopify",
            "title": "Name",
            "@mapping": "takeshape:local:Product.90tPC0GwFe"
          },
          "description": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Description",
            "@mapping": "takeshape:local:Product.d7umca_W6"
          },
          "productComponent": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "oneOf": [
              {
                "enum": [
                  "withImageGrid"
                ],
                "title": "withImageGrid"
              },
              {
                "enum": [
                  "withImage"
                ],
                "title": "withImage"
              }
            ],
            "title": "Product Component",
            "@mapping": "takeshape:local:Product.ViTuUtNE_"
          },
          "hideBreadcrumbs": {
            "type": "boolean",
            "default": false,
            "@l10n": false,
            "description": "",
            "title": "Hide Breadcrumbs",
            "@mapping": "takeshape:local:Product.SNVU8G6B8"
          },
          "hideReviews": {
            "default": false,
            "@l10n": false,
            "type": "boolean",
            "description": "",
            "title": "Hide Reviews",
            "@mapping": "takeshape:local:Product.tKDD7oaK_"
          },
          "hideRelatedProducts": {
            "default": false,
            "@l10n": false,
            "type": "boolean",
            "description": "",
            "title": "Hide Related Products",
            "@mapping": "takeshape:local:Product.rFRswSLmi"
          },
          "additionalDetails": {
            "title": "Additional Details",
            "description": "",
            "items": {
              "@ref": "local:ProductAdditionalDetails"
            },
            "type": "array",
            "@mapping": "takeshape:local:Product.K05wP-xkq"
          },
          "sections": {
            "items": {
              "oneOf": [
                {
                  "@ref": "local:FeaturesFullWidthWithVerticalImagesComponent"
                },
                {
                  "@ref": "local:NewsletterCenteredCardWithGraphicComponent"
                },
                {
                  "@ref": "local:FeaturesAlternativeSideBySideWithImagesComponent"
                },
                {
                  "@ref": "local:FaqTwoColumnsWithImageComponent"
                },
                {
                  "@ref": "local:TestimonialWithOverlappingImageComponent"
                },
                {
                  "@ref": "local:CtaBrandPanelWithOverlappingImageComponent"
                },
                {
                  "@ref": "local:FeaturesGridComponent"
                },
                {
                  "@ref": "local:FaqOneColumnComponent"
                }
              ]
            },
            "type": "array",
            "description": "",
            "title": "Sections",
            "@mapping": "takeshape:local:Product.0CoajKGqQ"
          },
          "showDetails": {
            "default": false,
            "@l10n": false,
            "type": "boolean",
            "description": "",
            "title": "Show Details",
            "@mapping": "takeshape:local:Product.G8xJX4-la"
          },
          "details": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:ProductPageDetails",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Details",
            "@backreference": {
              "enabled": false
            },
            "@mapping": "takeshape:local:Product.9L-sIzyMH"
          },
          "showPolicies": {
            "default": false,
            "@l10n": false,
            "type": "boolean",
            "description": "",
            "title": "Show Policies",
            "@mapping": "takeshape:local:Product.P-mSqawNx"
          },
          "policies": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:ProductPagePolicies",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Policies",
            "@backreference": {
              "enabled": false
            },
            "@mapping": "takeshape:local:Product.5jVzYQxzC"
          },
          "shopifyProductId": {
            "type": "string",
            "@mapping": "takeshape:local:Product.shopifyProductId",
            "title": "shopify product",
            "minLength": 1,
            "pattern": "(^gid://shopify/Product/\\d+$)"
          },
          "shopifyProduct": {
            "@ref": "shopify:Product",
            "@resolver": {
              "name": "graphql:query",
              "service": "shopify",
              "fieldName": "product",
              "args": {
                "ops": [
                  {
                    "path": "id",
                    "mapping": "$source.shopifyProductId"
                  }
                ]
              }
            },
            "@tag": "pattern:service-object:1"
          }
        }
      }
    },
    "ProductPageDetailsText": {
      "id": "9MK2Somel",
      "name": "ProductPageDetailsText",
      "title": "Product Page Details Text",
      "schema": {
        "type": "object",
        "properties": {
          "primary": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Primary",
            "@mapping": "takeshape:local:ProductPageDetailsText.tjfyE4q2v"
          },
          "secondary": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Secondary",
            "@mapping": "takeshape:local:ProductPageDetailsText.BbskD20Ls"
          }
        },
        "required": [
          "primary",
          "secondary"
        ]
      }
    },
    "ProductPageDetailsDetails": {
      "id": "TA8kBx-Sj",
      "name": "ProductPageDetailsDetails",
      "title": "Product Page Details Details",
      "schema": {
        "type": "object",
        "properties": {
          "image": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:Asset",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Image",
            "@mapping": "takeshape:local:ProductPageDetailsDetails.FDtSeWFuZ"
          },
          "description": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Description",
            "@mapping": "takeshape:local:ProductPageDetailsDetails.JvbkR_gid"
          }
        },
        "required": [
          "description"
        ]
      }
    },
    "ProductPageDetails": {
      "id": "naUzXVxMY",
      "name": "ProductPageDetails",
      "title": "Product Page Details",
      "workflow": "default",
      "model": {
        "type": "multiple"
      },
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:ProductPageDetails.WtUmvnUzJ"
          },
          "text": {
            "title": "Text",
            "description": "",
            "@ref": "local:ProductPageDetailsText",
            "@mapping": "takeshape:local:ProductPageDetails.9MK2Somel"
          },
          "details": {
            "title": "Details",
            "description": "",
            "items": {
              "@ref": "local:ProductPageDetailsDetails"
            },
            "maxItems": 2,
            "minItems": 2,
            "type": "array",
            "@mapping": "takeshape:local:ProductPageDetails.TA8kBx-Sj"
          }
        },
        "required": [
          "name",
          "text",
          "details"
        ]
      }
    },
    "ProductPagePoliciesPolicies": {
      "id": "YWzSVEezj",
      "name": "ProductPagePoliciesPolicies",
      "title": "Product Page Policies Policies",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:ProductPagePoliciesPolicies.uAw2z0ptc"
          },
          "description": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Description",
            "@mapping": "takeshape:local:ProductPagePoliciesPolicies.lifT1D0ra"
          },
          "image": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:Asset",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Image",
            "@mapping": "takeshape:local:ProductPagePoliciesPolicies.ddtRZLlsd"
          }
        },
        "required": [
          "name",
          "description",
          "image"
        ]
      }
    },
    "ProductPagePolicies": {
      "id": "MPyglWNF_",
      "name": "ProductPagePolicies",
      "title": "Product Page Policies",
      "workflow": "default",
      "model": {
        "type": "multiple"
      },
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:ProductPagePolicies.2ydozONqt"
          },
          "policies": {
            "title": "Policies",
            "description": "",
            "items": {
              "@ref": "local:ProductPagePoliciesPolicies"
            },
            "minItems": 1,
            "type": "array",
            "@mapping": "takeshape:local:ProductPagePolicies.YWzSVEezj"
          }
        },
        "required": [
          "name",
          "policies"
        ]
      }
    },
    "OffersComponent": {
      "id": "TB5fn0JVs",
      "name": "OffersComponent",
      "title": "Offers Component",
      "schema": {
        "type": "object",
        "properties": {
          "offers": {
            "title": "Offers",
            "description": "",
            "minItems": 1,
            "type": "array",
            "items": {
              "@ref": "local:OffersComponentOffers"
            },
            "@mapping": "takeshape:local:OffersComponent.xT4pw1DQX"
          }
        },
        "required": [
          "offers"
        ]
      }
    },
    "HeroComponent": {
      "id": "ryd1vUTw_",
      "name": "HeroComponent",
      "title": "Hero Component",
      "schema": {
        "type": "object",
        "properties": {
          "primaryText": {
            "title": "Primary Text",
            "description": "",
            "@ref": "local:HeroComponentPrimaryText",
            "@mapping": "takeshape:local:HeroComponent.a3_ERdS0i"
          },
          "secondaryText": {
            "minLength": 1,
            "type": "string",
            "title": "Secondary Text",
            "@mapping": "takeshape:local:HeroComponent.GtIaaH1nJ"
          },
          "features": {
            "title": "Features",
            "description": "",
            "items": {
              "@ref": "local:HeroComponentFeatures"
            },
            "type": "array",
            "@mapping": "takeshape:local:HeroComponent.oH9lnkD0P"
          },
          "firstButton": {
            "title": "First Button",
            "description": "",
            "@ref": "local:HeroComponentFirstButton",
            "@mapping": "takeshape:local:HeroComponent.iUrLCVel4"
          },
          "secondButton": {
            "title": "Second Button",
            "description": "",
            "@ref": "local:HeroComponentSecondButton",
            "@mapping": "takeshape:local:HeroComponent.df8zsJsX_"
          },
          "image": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:Asset",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Image",
            "@mapping": "takeshape:local:HeroComponent.f8GnBKxdc"
          }
        },
        "required": [
          "primaryText",
          "secondaryText",
          "image"
        ]
      }
    },
    "CollectionsComponent": {
      "id": "N442MMRnP",
      "name": "CollectionsComponent",
      "title": "Collections Component",
      "schema": {
        "type": "object",
        "properties": {
          "collections": {
            "title": "Collections",
            "description": "",
            "minItems": 1,
            "type": "array",
            "items": {
              "@ref": "local:CollectionsComponentCollections"
            },
            "@mapping": "takeshape:local:CollectionsComponent.CkeuB_BtQ"
          }
        },
        "required": [
          "collections"
        ]
      }
    },
    "BackgroundImageComponent": {
      "id": "owFx1bK_N",
      "name": "BackgroundImageComponent",
      "title": "Background Image Component",
      "schema": {
        "type": "object",
        "properties": {
          "image": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:Asset",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Image",
            "@mapping": "takeshape:local:BackgroundImageComponent.JiPgzhzwi"
          },
          "components": {
            "items": {
              "oneOf": [
                {
                  "@ref": "local:CollectionsComponent"
                },
                {
                  "@ref": "local:SaleComponent"
                },
                {
                  "@ref": "local:TestimonialsComponent"
                },
                {
                  "@ref": "local:OffersComponent"
                },
                {
                  "@ref": "local:HeroComponent"
                },
                {
                  "@ref": "local:BackgroundImageComponent"
                }
              ]
            },
            "minItems": 1,
            "type": "array",
            "description": "",
            "title": "Components",
            "@mapping": "takeshape:local:BackgroundImageComponent.9aCDl8bvs"
          }
        },
        "required": [
          "image",
          "components"
        ]
      }
    },
    "SaleComponent": {
      "id": "J99fCvBVY",
      "name": "SaleComponent",
      "title": "Sale Component",
      "schema": {
        "type": "object",
        "properties": {
          "primaryText": {
            "type": "string",
            "title": "Primary Text",
            "@mapping": "takeshape:local:SaleComponent.RDiJiVicD"
          },
          "secondaryText": {
            "type": "string",
            "title": "Secondary Text",
            "@mapping": "takeshape:local:SaleComponent.kAUoEI-vc"
          },
          "buttonText": {
            "type": "string",
            "title": "Button Text",
            "@mapping": "takeshape:local:SaleComponent.6rugQZtXB"
          }
        },
        "required": [
          "primaryText",
          "secondaryText",
          "buttonText"
        ]
      }
    },
    "TestimonialsComponent": {
      "id": "mLflhkK49",
      "name": "TestimonialsComponent",
      "title": "Testimonials Component",
      "schema": {
        "type": "object",
        "properties": {
          "testimonials": {
            "title": "Testimonials",
            "description": "",
            "minItems": 1,
            "type": "array",
            "items": {
              "@ref": "local:TestimonialsComponentTestimonials"
            },
            "@mapping": "takeshape:local:TestimonialsComponent.it7qU6IPS"
          }
        },
        "required": [
          "testimonials"
        ]
      }
    },
    "CollectionsComponentCollections": {
      "id": "CkeuB_BtQ",
      "name": "CollectionsComponentCollections",
      "title": "Collections Component Collections",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:CollectionsComponentCollections.GtqbZV_yV"
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "description": "",
            "title": "Description",
            "@mapping": "takeshape:local:CollectionsComponentCollections.-qIw4ksCG"
          },
          "href": {
            "type": "string",
            "minLength": 1,
            "description": "",
            "title": "Href",
            "@mapping": "takeshape:local:CollectionsComponentCollections.qBq3Hp4pU"
          },
          "image": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:Asset",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Image",
            "@mapping": "takeshape:local:CollectionsComponentCollections.44EIR8MU5"
          }
        },
        "required": [
          "name",
          "description",
          "href",
          "image"
        ]
      }
    },
    "OffersComponentOffers": {
      "id": "xT4pw1DQX",
      "name": "OffersComponentOffers",
      "title": "Offers Component Offers",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:OffersComponentOffers.U7DX6k9t8"
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "description": "",
            "title": "Description",
            "@mapping": "takeshape:local:OffersComponentOffers.w1TXpbdet"
          },
          "href": {
            "type": "string",
            "minLength": 1,
            "description": "",
            "title": "Href",
            "@mapping": "takeshape:local:OffersComponentOffers.ZwRQHanTW"
          }
        },
        "required": [
          "name",
          "description",
          "href"
        ]
      }
    },
    "TestimonialsComponentTestimonials": {
      "id": "it7qU6IPS",
      "name": "TestimonialsComponentTestimonials",
      "title": "Testimonials Component Testimonials",
      "schema": {
        "type": "object",
        "properties": {
          "quote": {
            "type": "string",
            "minLength": 1,
            "description": "",
            "title": "Quote",
            "@mapping": "takeshape:local:TestimonialsComponentTestimonials.KFwmm_umC"
          },
          "attribution": {
            "type": "string",
            "minLength": 1,
            "description": "",
            "title": "Attribution",
            "@mapping": "takeshape:local:TestimonialsComponentTestimonials.ZCRhMIZOP"
          }
        },
        "required": [
          "quote",
          "attribution"
        ]
      }
    },
    "TrendingProductsComponentTrendingProducts": {
      "id": "B6g6lGJm_",
      "name": "TrendingProductsComponentTrendingProducts",
      "title": "Trending Products Component TrendingProducts",
      "schema": {
        "type": "object",
        "properties": {
          "shopifyProductId": {
            "type": "string",
            "minLength": 1,
            "description": "",
            "title": "Shopify Product ID",
            "@mapping": "takeshape:local:TrendingProductsComponentTrendingProducts.X9e5hJImy"
          },
          "shopifyProduct": {
            "@ref": "shopify:Product",
            "@resolver": {
              "name": "graphql:query",
              "service": "shopify",
              "fieldName": "product",
              "args": {
                "ops": [
                  {
                    "path": "id",
                    "mapping": "$source.shopifyProductId"
                  }
                ]
              }
            }
          }
        },
        "required": [
          "shopifyProductId"
        ]
      }
    },
    "TrendingProductsComponent": {
      "id": "8fw2VcmMH",
      "name": "TrendingProductsComponent",
      "title": "Trending Products Component",
      "schema": {
        "type": "object",
        "properties": {
          "trendingProducts": {
            "title": "Trending Products",
            "description": "",
            "minItems": 1,
            "type": "array",
            "items": {
              "@ref": "local:TrendingProductsComponentTrendingProducts"
            },
            "@mapping": "takeshape:local:TrendingProductsComponent.B6g6lGJm_"
          }
        },
        "required": [
          "trendingProducts"
        ]
      }
    },
    "Storefront": {
      "id": "u3-xM1Ynt",
      "name": "Storefront",
      "title": "Storefront",
      "workflow": "default",
      "model": {
        "type": "single"
      },
      "schema": {
        "type": "object",
        "properties": {
          "seo": {
            "title": "SEO",
            "description": "",
            "@ref": "local:StorefrontSeo",
            "@mapping": "takeshape:local:Storefront.vZbyI9FlP"
          },
          "components": {
            "items": {
              "oneOf": [
                {
                  "@ref": "local:HeroComponent"
                },
                {
                  "@ref": "local:FeaturesGridComponent"
                },
                {
                  "@ref": "local:CtaBrandPanelWithOverlappingImageComponent"
                },
                {
                  "@ref": "local:TestimonialWithOverlappingImageComponent"
                },
                {
                  "@ref": "local:FaqTwoColumnsWithImageComponent"
                },
                {
                  "@ref": "local:FeaturesAlternativeSideBySideWithImagesComponent"
                },
                {
                  "@ref": "local:NewsletterCenteredCardWithGraphicComponent"
                }
              ]
            },
            "type": "array",
            "title": "Components",
            "@mapping": "takeshape:local:Storefront.nSsbsiM-3"
          }
        }
      }
    },
    "Navigation": {
      "id": "Go7s7M7Ij",
      "name": "Navigation",
      "title": "Navigation",
      "workflow": "default",
      "model": {
        "type": "single"
      },
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Message",
            "@mapping": "takeshape:local:Navigation.PL-G7Y5Vx"
          },
          "sections": {
            "title": "Sections",
            "description": "",
            "items": {
              "@ref": "local:NavigationSections"
            },
            "type": "array",
            "@mapping": "takeshape:local:Navigation.yDgLbdGqy"
          }
        }
      }
    },
    "NavigationSectionsSubsections": {
      "id": "1Vg8Vxv0J",
      "name": "NavigationSectionsSubsections",
      "title": "Navigation Sections Subsections",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:NavigationSectionsSubsections.7gt8oisHU"
          },
          "links": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "@ref": "local:Link"
                },
                {
                  "@ref": "local:Page"
                },
                {
                  "@ref": "local:Collection"
                },
                {
                  "@ref": "local:Product"
                }
              ]
            },
            "@input": {
              "type": "array",
              "items": {
                "@ref": "local:TSRelationship"
              }
            },
            "title": "Links",
            "@backreference": {
              "enabled": false
            },
            "@mapping": "takeshape:local:NavigationSectionsSubsections.EQ9Zhy0s8"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    "NavigationSections": {
      "id": "yDgLbdGqy",
      "name": "NavigationSections",
      "title": "Navigation Sections",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:NavigationSections.epnGSC2k1"
          },
          "link": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "oneOf": [
              {
                "@ref": "local:Link"
              },
              {
                "@ref": "local:Product"
              },
              {
                "@ref": "local:Collection"
              },
              {
                "@ref": "local:Page"
              }
            ],
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Link",
            "@backreference": {
              "enabled": false
            },
            "@mapping": "takeshape:local:NavigationSections.u2cRNa3wf"
          },
          "subsections": {
            "title": "Subsections",
            "description": "",
            "items": {
              "@ref": "local:NavigationSectionsSubsections"
            },
            "type": "array",
            "@mapping": "takeshape:local:NavigationSections.1Vg8Vxv0J"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    "Link": {
      "id": "Ce6MMM76G",
      "name": "Link",
      "title": "Link",
      "model": {
        "type": "multiple"
      },
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "@mapping": "takeshape:local:Link.xri0JcIxz"
          },
          "href": {
            "type": "string",
            "title": "Href",
            "@mapping": "takeshape:local:Link.PsB6Lb6xt"
          }
        },
        "required": [
          "name",
          "href"
        ]
      }
    },
    "PageSectionMdx": {
      "id": "lwxiF15wp",
      "name": "PageSectionMdx",
      "title": "Page Section MDX",
      "schema": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "@tag": "mdx",
            "description": "",
            "title": "Content",
            "@mapping": "takeshape:local:PageSectionMdx.RTs7-IfiY"
          }
        }
      }
    },
    "PageSectionTitle": {
      "id": "6YndNJhLe",
      "name": "PageSectionTitle",
      "title": "Page Section Title",
      "schema": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "title": "Label",
            "@mapping": "takeshape:local:PageSectionTitle.zGM21XRy7"
          },
          "heading": {
            "type": "string",
            "title": "Heading",
            "@mapping": "takeshape:local:PageSectionTitle.CBTKizd-7"
          },
          "subheading": {
            "type": "string",
            "title": "Subheading",
            "@mapping": "takeshape:local:PageSectionTitle.4ewzEFL1U"
          }
        }
      }
    },
    "Page": {
      "id": "bAWkmGdzI",
      "name": "Page",
      "title": "Page",
      "workflow": "default",
      "model": {
        "type": "multiple"
      },
      "schema": {
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Title",
            "@mapping": "takeshape:local:Page.Zy4z602Ci"
          },
          "slug": {
            "@derivedFrom": "title",
            "pattern": "^[\\w-]*$",
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Slug",
            "@mapping": "takeshape:local:Page.GJu5JWCZS"
          },
          "seo": {
            "title": "SEO",
            "description": "",
            "@ref": "local:PageSeo",
            "@mapping": "takeshape:local:Page.nytl5yojX"
          },
          "sections": {
            "items": {
              "oneOf": [
                {
                  "@ref": "local:PageSectionTitle"
                },
                {
                  "@ref": "local:PageSectionMdx"
                },
                {
                  "@ref": "local:HeroSectionMediumWithIllustrationComponent"
                },
                {
                  "@ref": "local:FeaturesGridComponent"
                },
                {
                  "@ref": "local:CtaBrandPanelWithOverlappingImageComponent"
                },
                {
                  "@ref": "local:TestimonialWithOverlappingImageComponent"
                },
                {
                  "@ref": "local:FaqTwoColumnsWithImageComponent"
                },
                {
                  "@ref": "local:FeaturesAlternativeSideBySideWithImagesComponent"
                },
                {
                  "@ref": "local:NewsletterCenteredCardWithGraphicComponent"
                },
                {
                  "@ref": "local:FeaturesFullWidthWithVerticalImagesComponent"
                }
              ]
            },
            "type": "array",
            "title": "Sections",
            "@mapping": "takeshape:local:Page.Mlup98oFX"
          }
        },
        "required": [
          "title",
          "slug"
        ]
      }
    },
    "CollectionInterface": {
      "id": "CollectionInterface",
      "name": "CollectionInterface",
      "title": "CollectionInterface",
      "description": "CollectionInterface",
      "schema": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "_version": {
            "type": "number"
          },
          "_status": {
            "type": "string",
            "@workflow": "default"
          },
          "name": {
            "type": "string",
            "description": "Initialized with title from shopify",
            "title": "Name"
          },
          "breadcrumbTitle": {
            "type": "string",
            "description": "An optional title to override the regular title in breadcrumbs",
            "title": "Breadcrumb Title"
          },
          "parent": {
            "@ref": "local:TSRelationship",
            "title": "Parent",
            "@output": {
              "description": "",
              "@args": "TSRelationshipArgs",
              "@resolver": {
                "name": "takeshape:getRelated",
                "service": "takeshape:local",
                "options": {
                  "nullable": true
                }
              },
              "@ref": "local:Collection",
              "@backreference": {
                "enabled": false
              }
            }
          },
          "shopifyCollectionId": {
            "title": "Service ID",
            "type": "string"
          },
          "shopifyCollection": {
            "@ref": "shopify:CollectionInput"
          }
        },
        "required": []
      }
    },
    "Collection": {
      "id": "wsEbSG-yV",
      "name": "Collection",
      "title": "Collection",
      "workflow": "default",
      "model": {
        "type": "multiple"
      },
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Initialized with title from shopify",
            "title": "Name",
            "@mapping": "takeshape:local:Collection.sZuVCwK3h7"
          },
          "breadcrumbTitle": {
            "type": "string",
            "description": "An alternate title to use in breadcrumbs",
            "title": "Breadcrumb Title"
          },
          "parent": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:Collection",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Parent",
            "@backreference": {
              "enabled": false
            },
            "@mapping": "takeshape:local:Collection.BGIKvV5Mk"
          },
          "shopifyCollectionId": {
            "type": "string",
            "@mapping": "takeshape:local:Collection.shopifyCollectionId",
            "title": "shopify collection",
            "minLength": 1,
            "pattern": "(^gid://shopify/Collection/\\d+$)"
          },
          "shopifyCollection": {
            "@ref": "shopify:Collection",
            "@resolver": {
              "name": "graphql:query",
              "service": "shopify",
              "fieldName": "collection",
              "args": {
                "ops": [
                  {
                    "path": "id",
                    "mapping": "$source.shopifyCollectionId"
                  }
                ]
              }
            },
            "@tag": "pattern:service-object:1"
          }
        }
      }
    },
    "CollectionComponent": {
      "id": "DRtrH9XX-",
      "name": "CollectionComponent",
      "title": "Collection Component",
      "schema": {
        "type": "object",
        "properties": {
          "collection": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:Collection",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Collection",
            "@backreference": {
              "enabled": false
            },
            "@mapping": "takeshape:local:CollectionComponent.v7nhbs4aM"
          }
        }
      }
    },
    "CreateMyProductReviewResponse": {
      "id": "CreateMyProductReviewResponse",
      "name": "CreateMyProductReviewResponse",
      "title": "CreateMyProductReviewResponse",
      "schema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      }
    },
    "LineItemAttributes": {
      "id": "P56MqxMLJ",
      "name": "LineItemAttributes",
      "title": "Line Item Attributes",
      "workflow": "default",
      "model": {
        "type": "multiple"
      },
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:LineItemAttributes.eTeyFsdLD"
          },
          "attributes": {
            "title": "Attributes",
            "description": "",
            "items": {
              "@ref": "local:LineItemAttributesAttributes"
            },
            "minItems": 1,
            "type": "array",
            "@mapping": "takeshape:local:LineItemAttributes.gQT0mPkqn"
          }
        },
        "required": [
          "name",
          "attributes"
        ]
      }
    },
    "LineItemAttributesAttributesValues": {
      "id": "1MLfOPrws",
      "name": "LineItemAttributesAttributesValues",
      "title": "Line Item Attributes Attributes Values",
      "schema": {
        "type": "object",
        "properties": {
          "value": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Value",
            "@mapping": "takeshape:local:LineItemAttributesAttributesValues.9NwUFK_Ve"
          }
        }
      }
    },
    "LineItemAttributesAttributes": {
      "id": "gQT0mPkqn",
      "name": "LineItemAttributesAttributes",
      "title": "Line Item Attributes Attributes",
      "schema": {
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string",
            "description": "The property key.",
            "title": "Key",
            "@mapping": "takeshape:local:LineItemAttributesAttributes.C-tUheU-E"
          },
          "values": {
            "title": "Values",
            "description": "Optional values for the property.",
            "items": {
              "@ref": "local:LineItemAttributesAttributesValues"
            },
            "type": "array",
            "@mapping": "takeshape:local:LineItemAttributesAttributes.1MLfOPrws"
          }
        },
        "required": [
          "key"
        ]
      }
    },
    "HeroComponentPrimaryText": {
      "id": "a3_ERdS0i",
      "name": "HeroComponentPrimaryText",
      "title": "Hero Component  PrimaryText",
      "schema": {
        "type": "object",
        "properties": {
          "firstRow": {
            "minLength": 1,
            "type": "string",
            "title": "First Row",
            "@mapping": "takeshape:local:HeroComponentPrimaryText.dBpjebsDG"
          },
          "secondRow": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Second Row",
            "@mapping": "takeshape:local:HeroComponentPrimaryText.dOUw5QvNm"
          }
        },
        "required": [
          "firstRow"
        ]
      }
    },
    "HeroComponentFirstButton": {
      "id": "iUrLCVel4",
      "name": "HeroComponentFirstButton",
      "title": "Hero Component  FirstButton",
      "schema": {
        "type": "object",
        "properties": {
          "text": {
            "minLength": 1,
            "type": "string",
            "title": "Text",
            "@mapping": "takeshape:local:HeroComponentFirstButton.1UlfVUH6m"
          },
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "URL",
            "@mapping": "takeshape:local:HeroComponentFirstButton.1M0IClJXK"
          }
        },
        "required": [
          "text",
          "url"
        ]
      }
    },
    "HeroComponentSecondButton": {
      "id": "df8zsJsX_",
      "name": "HeroComponentSecondButton",
      "title": "Hero Component  SecondButton",
      "schema": {
        "type": "object",
        "properties": {
          "text": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Text",
            "@mapping": "takeshape:local:HeroComponentSecondButton.ta4-x74T_"
          },
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "URL",
            "@mapping": "takeshape:local:HeroComponentSecondButton.CAk4loZ-7"
          }
        },
        "required": [
          "text",
          "url"
        ]
      }
    },
    "Homepage": {
      "id": "K0-71QJNY",
      "name": "Homepage",
      "title": "Homepage",
      "workflow": "default",
      "model": {
        "type": "single"
      },
      "schema": {
        "type": "object",
        "properties": {
          "components": {
            "items": {
              "oneOf": [
                {
                  "@ref": "local:HeroComponent"
                },
                {
                  "@ref": "local:FeaturesGridComponent"
                },
                {
                  "@ref": "local:CtaBrandPanelWithOverlappingImageComponent"
                }
              ]
            },
            "type": "array",
            "description": "",
            "title": "Components",
            "@mapping": "takeshape:local:Homepage._DmpdCYQp"
          }
        }
      }
    },
    "HeroComponentFeatures": {
      "id": "oH9lnkD0P",
      "name": "HeroComponentFeatures",
      "title": "Hero Component  Features",
      "schema": {
        "type": "object",
        "properties": {
          "title": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Title",
            "@mapping": "takeshape:local:HeroComponentFeatures.k4GRALhyJ"
          },
          "description": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Description",
            "@mapping": "takeshape:local:HeroComponentFeatures.LJQbgHQEJ"
          },
          "iconName": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Icon Name",
            "@mapping": "takeshape:local:HeroComponentFeatures.2-cQ2BbiZ"
          }
        }
      }
    },
    "StorefrontSeo": {
      "id": "vZbyI9FlP",
      "name": "StorefrontSeo",
      "title": "Storefront Seo",
      "schema": {
        "type": "object",
        "properties": {
          "metaTitle": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Meta Title",
            "@mapping": "takeshape:local:StorefrontSeo.2QrDfFGQZ"
          },
          "metaDescription": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Meta Description",
            "@mapping": "takeshape:local:StorefrontSeo.7bgteasAg"
          }
        }
      }
    },
    "FeaturesGridComponentBlocks": {
      "id": "PZ80vGPUX",
      "name": "FeaturesGridComponentBlocks",
      "title": "Features Grid Component Blocks",
      "schema": {
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Title",
            "@mapping": "takeshape:local:FeaturesGridComponentBlocks.Z8a1_u8PB"
          },
          "description": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Description",
            "@mapping": "takeshape:local:FeaturesGridComponentBlocks.w1wakbQNo"
          },
          "iconName": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Icon Name",
            "@mapping": "takeshape:local:FeaturesGridComponentBlocks.J0zVSXjZL"
          }
        }
      }
    },
    "FeaturesGridComponent": {
      "id": "nV5a1IKi8",
      "name": "FeaturesGridComponent",
      "title": "Features Grid Component",
      "schema": {
        "type": "object",
        "properties": {
          "preheading": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Preheading",
            "@mapping": "takeshape:local:FeaturesGridComponent.5K_J1zWe7"
          },
          "heading": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Heading",
            "@mapping": "takeshape:local:FeaturesGridComponent.QjPfK1eOR"
          },
          "subheading": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Subheading",
            "@mapping": "takeshape:local:FeaturesGridComponent.XpgZUBsP7"
          },
          "blocks": {
            "title": "Blocks",
            "description": "",
            "items": {
              "@ref": "local:FeaturesGridComponentBlocks"
            },
            "type": "array",
            "@mapping": "takeshape:local:FeaturesGridComponent.PZ80vGPUX"
          }
        }
      }
    },
    "CtaBrandPanelWithOverlappingImageComponent": {
      "id": "woQDxbxR_",
      "name": "CtaBrandPanelWithOverlappingImageComponent",
      "title": "Cta Brand Panel With Overlapping Image Component",
      "schema": {
        "type": "object",
        "properties": {
          "heading": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Heading",
            "@mapping": "takeshape:local:CtaBrandPanelWithOverlappingImageComponent.RqsQQJb7O"
          },
          "description": {
            "type": "string",
            "@tag": "mdx",
            "description": "",
            "title": "Description",
            "@mapping": "takeshape:local:CtaBrandPanelWithOverlappingImageComponent.WwiSFtoZs"
          },
          "button": {
            "title": "Button",
            "description": "",
            "@ref": "local:CtaBrandPanelWithOverlappingImageComponentButton",
            "@mapping": "takeshape:local:CtaBrandPanelWithOverlappingImageComponent.rXseF9wTS"
          },
          "image": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:Asset",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Image",
            "@mapping": "takeshape:local:CtaBrandPanelWithOverlappingImageComponent.LZIi056uq"
          }
        },
        "required": [
          "image"
        ]
      }
    },
    "CtaBrandPanelWithOverlappingImageComponentButton": {
      "id": "rXseF9wTS",
      "name": "CtaBrandPanelWithOverlappingImageComponentButton",
      "title": "Cta Brand Panel With Overlapping Image Component Button",
      "schema": {
        "type": "object",
        "properties": {
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "URL",
            "@mapping": "takeshape:local:CtaBrandPanelWithOverlappingImageComponentButton.e4dTDtIky"
          },
          "text": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Text",
            "@mapping": "takeshape:local:CtaBrandPanelWithOverlappingImageComponentButton.bo07Fc_MI"
          }
        },
        "required": [
          "url",
          "text"
        ]
      }
    },
    "TestimonialWithOverlappingImageComponent": {
      "id": "EVdiz60xi",
      "name": "TestimonialWithOverlappingImageComponent",
      "title": "Testimonial With Overlapping Image Component",
      "schema": {
        "type": "object",
        "properties": {
          "quote": {
            "minLength": 1,
            "type": "string",
            "@tag": "mdx",
            "description": "",
            "title": "Quote",
            "@mapping": "takeshape:local:TestimonialWithOverlappingImageComponent.yOuWAseSz"
          },
          "source": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Source",
            "@mapping": "takeshape:local:TestimonialWithOverlappingImageComponent.R6l6gB8SG"
          },
          "image": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:Asset",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Image",
            "@mapping": "takeshape:local:TestimonialWithOverlappingImageComponent.64HJKD835"
          }
        },
        "required": [
          "quote",
          "image"
        ]
      }
    },
    "FaqTwoColumnsWithImageComponentFaQs": {
      "id": "ovVjY_jJt",
      "name": "FaqTwoColumnsWithImageComponentFaQs",
      "title": "Faq Two Columns with Image Component FaQs",
      "schema": {
        "type": "object",
        "properties": {
          "question": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Question",
            "@mapping": "takeshape:local:FaqTwoColumnsWithImageComponentFaQs.PFw8bC6a1"
          },
          "answer": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Answer",
            "@mapping": "takeshape:local:FaqTwoColumnsWithImageComponentFaQs.aBUsBfqEw"
          }
        },
        "required": [
          "question",
          "answer"
        ]
      }
    },
    "FaqTwoColumnsWithImageComponent": {
      "id": "JuVx9MyCf",
      "name": "FaqTwoColumnsWithImageComponent",
      "title": "Faq Two Columns with Image Component",
      "schema": {
        "type": "object",
        "properties": {
          "heading": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Heading",
            "@mapping": "takeshape:local:FaqTwoColumnsWithImageComponent.RpZbp0kSA"
          },
          "subheading": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Subheading",
            "@mapping": "takeshape:local:FaqTwoColumnsWithImageComponent.O_y5X3qv-"
          },
          "faQs": {
            "title": "FAQs",
            "description": "",
            "items": {
              "@ref": "local:FaqTwoColumnsWithImageComponentFaQs"
            },
            "type": "array",
            "@mapping": "takeshape:local:FaqTwoColumnsWithImageComponent.ovVjY_jJt"
          },
          "image": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:Asset",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Image",
            "@mapping": "takeshape:local:FaqTwoColumnsWithImageComponent.jyJTGnHcr"
          },
          "button": {
            "title": "Button",
            "description": "",
            "@ref": "local:FaqTwoColumnsWithImageComponentButton",
            "@mapping": "takeshape:local:FaqTwoColumnsWithImageComponent.EY3L1bpsl"
          }
        },
        "required": [
          "image"
        ]
      }
    },
    "FaqTwoColumnsWithImageComponentButton": {
      "id": "EY3L1bpsl",
      "name": "FaqTwoColumnsWithImageComponentButton",
      "title": "Faq Two Columns with Image Component Button",
      "schema": {
        "type": "object",
        "properties": {
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "URL",
            "@mapping": "takeshape:local:FaqTwoColumnsWithImageComponentButton.2E9e_V8mY"
          },
          "text": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Text",
            "@mapping": "takeshape:local:FaqTwoColumnsWithImageComponentButton.snXJDmy3I"
          }
        },
        "required": [
          "url",
          "text"
        ]
      }
    },
    "FeaturesAlternativeSideBySideWithImagesComponentRepeaterButton": {
      "id": "wWbKGvpGc",
      "name": "FeaturesAlternativeSideBySideWithImagesComponentRepeaterButton",
      "title": "Features Alternative Side-by-side With Images Component Repeater Button",
      "schema": {
        "type": "object",
        "properties": {
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "URL",
            "@mapping": "takeshape:local:FeaturesAlternativeSideBySideWithImagesComponentRepeaterButton.QLaJxSf_t"
          },
          "text": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Text",
            "@mapping": "takeshape:local:FeaturesAlternativeSideBySideWithImagesComponentRepeaterButton.7lqIDZT1p"
          }
        },
        "required": [
          "url",
          "text"
        ]
      }
    },
    "FeaturesAlternativeSideBySideWithImagesComponentRepeater": {
      "id": "DjVVuO4BJ",
      "name": "FeaturesAlternativeSideBySideWithImagesComponentRepeater",
      "title": "Features Alternative Side-by-side With Images Component Repeater",
      "schema": {
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Title",
            "@mapping": "takeshape:local:FeaturesAlternativeSideBySideWithImagesComponentRepeater.uP3MwiuRE"
          },
          "text": {
            "type": "string",
            "@tag": "mdx",
            "description": "",
            "title": "Text",
            "@mapping": "takeshape:local:FeaturesAlternativeSideBySideWithImagesComponentRepeater.-0OCOSqr9"
          },
          "button": {
            "title": "Button",
            "description": "",
            "@ref": "local:FeaturesAlternativeSideBySideWithImagesComponentRepeaterButton",
            "@mapping": "takeshape:local:FeaturesAlternativeSideBySideWithImagesComponentRepeater.wWbKGvpGc"
          },
          "image": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:Asset",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Image",
            "@mapping": "takeshape:local:FeaturesAlternativeSideBySideWithImagesComponentRepeater.M5U0EpjJv"
          }
        },
        "required": [
          "title",
          "image"
        ]
      }
    },
    "FeaturesAlternativeSideBySideWithImagesComponent": {
      "id": "g7boMIc9c",
      "name": "FeaturesAlternativeSideBySideWithImagesComponent",
      "title": "Features Alternative Side-by-side With Images Component",
      "schema": {
        "type": "object",
        "properties": {
          "heading": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Heading",
            "@mapping": "takeshape:local:FeaturesAlternativeSideBySideWithImagesComponent.NFebWBFlO"
          },
          "subheading": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Subheading",
            "@mapping": "takeshape:local:FeaturesAlternativeSideBySideWithImagesComponent.cqWPTeQld"
          },
          "repeater": {
            "title": "Repeater",
            "description": "",
            "items": {
              "@ref": "local:FeaturesAlternativeSideBySideWithImagesComponentRepeater"
            },
            "type": "array",
            "@mapping": "takeshape:local:FeaturesAlternativeSideBySideWithImagesComponent.DjVVuO4BJ"
          }
        }
      }
    },
    "NewsletterCenteredCardWithGraphicComponent": {
      "id": "sp4oxwpMD",
      "name": "NewsletterCenteredCardWithGraphicComponent",
      "title": "Newsletter Centered Card With Graphic Component",
      "schema": {
        "type": "object",
        "properties": {
          "preHeading": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Pre Heading",
            "@mapping": "takeshape:local:NewsletterCenteredCardWithGraphicComponent.1okYgni7A"
          },
          "heading": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Heading",
            "@mapping": "takeshape:local:NewsletterCenteredCardWithGraphicComponent.-jnKeFN8j"
          },
          "description": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Description",
            "@mapping": "takeshape:local:NewsletterCenteredCardWithGraphicComponent.lrUcU6QXi"
          }
        }
      }
    },
    "PageSeo": {
      "id": "nytl5yojX",
      "name": "PageSeo",
      "title": "Page Seo",
      "schema": {
        "type": "object",
        "properties": {
          "metaTitle": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Meta Title",
            "@mapping": "takeshape:local:PageSeo.1GJQ7WQx0"
          },
          "metaDescription": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Meta Description",
            "@mapping": "takeshape:local:PageSeo.Ktt5-Oxpx"
          }
        }
      }
    },
    "FeaturesFullWidthWithVerticalImagesComponentRepeaterButton": {
      "id": "Fp04HxO5J",
      "name": "FeaturesFullWidthWithVerticalImagesComponentRepeaterButton",
      "title": "Features Full Width With Vertical Images Component Repeater Button",
      "schema": {
        "type": "object",
        "properties": {
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "URL",
            "@mapping": "takeshape:local:FeaturesFullWidthWithVerticalImagesComponentRepeaterButton.8_un7C9XW"
          },
          "text": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Text",
            "@mapping": "takeshape:local:FeaturesFullWidthWithVerticalImagesComponentRepeaterButton.xtvZqAcSr"
          }
        },
        "required": [
          "url",
          "text"
        ]
      }
    },
    "FeaturesFullWidthWithVerticalImagesComponentRepeater": {
      "id": "RxKi1mhf5",
      "name": "FeaturesFullWidthWithVerticalImagesComponentRepeater",
      "title": "Features Full Width With Vertical Images Component Repeater",
      "schema": {
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Title",
            "@mapping": "takeshape:local:FeaturesFullWidthWithVerticalImagesComponentRepeater.A5ynxq37v"
          },
          "description": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Description",
            "@mapping": "takeshape:local:FeaturesFullWidthWithVerticalImagesComponentRepeater.p9V8EpNXg"
          },
          "button": {
            "title": "Button",
            "description": "",
            "@ref": "local:FeaturesFullWidthWithVerticalImagesComponentRepeaterButton",
            "@mapping": "takeshape:local:FeaturesFullWidthWithVerticalImagesComponentRepeater.Fp04HxO5J"
          },
          "image": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:Asset",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Image",
            "@mapping": "takeshape:local:FeaturesFullWidthWithVerticalImagesComponentRepeater.eEjOTRWeb"
          }
        },
        "required": [
          "title",
          "image"
        ]
      }
    },
    "FeaturesFullWidthWithVerticalImagesComponent": {
      "id": "CY7vjqKC6",
      "name": "FeaturesFullWidthWithVerticalImagesComponent",
      "title": "Features Full Width With Vertical Images Component",
      "schema": {
        "type": "object",
        "properties": {
          "heading": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Heading",
            "@mapping": "takeshape:local:FeaturesFullWidthWithVerticalImagesComponent.DQUvkynsu"
          },
          "description": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Description",
            "@mapping": "takeshape:local:FeaturesFullWidthWithVerticalImagesComponent.VsaZW3Vq6"
          },
          "repeater": {
            "title": "Repeater",
            "description": "",
            "items": {
              "@ref": "local:FeaturesFullWidthWithVerticalImagesComponentRepeater"
            },
            "type": "array",
            "@mapping": "takeshape:local:FeaturesFullWidthWithVerticalImagesComponent.RxKi1mhf5"
          }
        }
      }
    },
    "HeroSectionMediumWithIllustrationComponentButton": {
      "id": "HfFEKI1fy",
      "name": "HeroSectionMediumWithIllustrationComponentButton",
      "title": "Hero Section Medium With Illustration Component Button",
      "schema": {
        "type": "object",
        "properties": {
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "URL",
            "@mapping": "takeshape:local:HeroSectionMediumWithIllustrationComponentButton.ocZ8tmQMw"
          },
          "text": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Text",
            "@mapping": "takeshape:local:HeroSectionMediumWithIllustrationComponentButton.dQiBhOJ1x"
          }
        },
        "required": [
          "url",
          "text"
        ]
      }
    },
    "HeroSectionMediumWithIllustrationComponent": {
      "id": "ZBGrAN08h",
      "name": "HeroSectionMediumWithIllustrationComponent",
      "title": "Hero Section Medium With Illustration Component",
      "schema": {
        "type": "object",
        "properties": {
          "heading": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Heading",
            "@mapping": "takeshape:local:HeroSectionMediumWithIllustrationComponent.dXzmISjuu"
          },
          "description": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Description",
            "@mapping": "takeshape:local:HeroSectionMediumWithIllustrationComponent.lcSPSMl4L"
          },
          "button": {
            "title": "Button",
            "description": "",
            "@ref": "local:HeroSectionMediumWithIllustrationComponentButton",
            "@mapping": "takeshape:local:HeroSectionMediumWithIllustrationComponent.HfFEKI1fy"
          },
          "image": {
            "description": "",
            "@args": "TSRelationshipArgs",
            "@resolver": {
              "name": "takeshape:getRelated",
              "service": "takeshape:local",
              "options": {
                "nullable": true
              }
            },
            "@ref": "local:Asset",
            "@input": {
              "@ref": "local:TSRelationship"
            },
            "title": "Image",
            "@mapping": "takeshape:local:HeroSectionMediumWithIllustrationComponent.vF9wBCeCt"
          }
        },
        "required": [
          "image"
        ]
      }
    },
    "BlogPageSeo": {
      "id": "lNOltdIda",
      "name": "BlogPageSeo",
      "title": "Blog Page Seo",
      "schema": {
        "type": "object",
        "properties": {
          "metaTitle": {
            "type": "string",
            "minLength": 0,
            "description": "",
            "title": "Meta Title",
            "@mapping": "takeshape:local:BlogPageSeo.9pmkq4yRN"
          },
          "metaDescription": {
            "type": "string",
            "minLength": 0,
            "description": "",
            "title": "Meta Description",
            "@mapping": "takeshape:local:BlogPageSeo.BZAZnIu83"
          }
        }
      }
    },
    "BlogPage": {
      "id": "sQfrSm1UY",
      "name": "BlogPage",
      "title": "Blog Page",
      "workflow": "default",
      "model": {
        "type": "single"
      },
      "schema": {
        "type": "object",
        "properties": {
          "seo": {
            "title": "SEO",
            "description": "",
            "@ref": "local:BlogPageSeo",
            "@mapping": "takeshape:local:BlogPage.lNOltdIda"
          },
          "components": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "@ref": "local:HeroSectionMediumWithIllustrationComponent"
                }
              ]
            },
            "description": "",
            "title": "Components",
            "@mapping": "takeshape:local:BlogPage.Yj-dRVvUg"
          }
        }
      }
    },
    "BlogPostSeo": {
      "id": "1huMsm9aA",
      "name": "BlogPostSeo",
      "title": "Blog Post Seo",
      "schema": {
        "type": "object",
        "properties": {
          "metaTitle": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Meta Title",
            "@mapping": "takeshape:local:BlogPostSeo.JUUF54AMr"
          },
          "metaDescription": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Meta Description",
            "@mapping": "takeshape:local:BlogPostSeo.VouapWq3A"
          }
        }
      }
    },
    "BlogPost": {
      "id": "VaN3nhADH",
      "name": "BlogPost",
      "title": "Blog Post",
      "workflow": "default",
      "model": {
        "type": "multiple"
      },
      "schema": {
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Title",
            "@mapping": "takeshape:local:BlogPost.idKV1IJ_f"
          },
          "slug": {
            "@derivedFrom": "title",
            "pattern": "^[\\w-]*$",
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Slug",
            "@mapping": "takeshape:local:BlogPost.3Wtwx-bXb"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "@l10n": false,
            "description": "",
            "title": "Date",
            "@mapping": "takeshape:local:BlogPost.FSKVtWgQh"
          },
          "seo": {
            "title": "SEO",
            "description": "",
            "@ref": "local:BlogPostSeo",
            "@mapping": "takeshape:local:BlogPost.1huMsm9aA"
          },
          "content": {
            "type": "string",
            "@tag": "mdx",
            "description": "",
            "title": "Content",
            "@mapping": "takeshape:local:BlogPost.B1UrOhCRW"
          }
        },
        "required": [
          "title",
          "slug"
        ]
      }
    },
    "GlobalSettingsHeaderNavigationLinks": {
      "id": "w2z7UESJ9",
      "name": "GlobalSettingsHeaderNavigationLinks",
      "title": "Global Settings Header Navigation Links",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:GlobalSettingsHeaderNavigationLinks.cGYMXf0Mv"
          },
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "URL",
            "@mapping": "takeshape:local:GlobalSettingsHeaderNavigationLinks.oreYk_GYA"
          }
        },
        "required": [
          "name",
          "url"
        ]
      }
    },
    "GlobalSettingsHeaderNavigation": {
      "id": "fH_MJ0naw",
      "name": "GlobalSettingsHeaderNavigation",
      "title": "Global Settings Header Navigation",
      "schema": {
        "type": "object",
        "properties": {
          "links": {
            "title": "Links",
            "description": "",
            "items": {
              "@ref": "local:GlobalSettingsHeaderNavigationLinks"
            },
            "type": "array",
            "@mapping": "takeshape:local:GlobalSettingsHeaderNavigation.w2z7UESJ9"
          }
        }
      }
    },
    "GlobalSettingsHeader": {
      "id": "85RA1oGcB",
      "name": "GlobalSettingsHeader",
      "title": "Global Settings Header",
      "schema": {
        "type": "object",
        "properties": {
          "navigation": {
            "title": "Navigation",
            "description": "",
            "@ref": "local:GlobalSettingsHeaderNavigation",
            "@mapping": "takeshape:local:GlobalSettingsHeader.fH_MJ0naw"
          }
        }
      }
    },
    "GlobalSettingsFooterNavigationSectionsLinks": {
      "id": "liJgMZjNd",
      "name": "GlobalSettingsFooterNavigationSectionsLinks",
      "title": "Global Settings Footer Navigation Sections Links",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:GlobalSettingsFooterNavigationSectionsLinks.o-4OFUS5J"
          },
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "URL",
            "@mapping": "takeshape:local:GlobalSettingsFooterNavigationSectionsLinks.b9aiM1OhI"
          }
        },
        "required": [
          "name",
          "url"
        ]
      }
    },
    "GlobalSettingsFooterNavigationSections": {
      "id": "fGXdJIAMv",
      "name": "GlobalSettingsFooterNavigationSections",
      "title": "Global Settings Footer Navigation Sections",
      "schema": {
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Title",
            "@mapping": "takeshape:local:GlobalSettingsFooterNavigationSections.eeEkizLSM"
          },
          "links": {
            "title": "Links",
            "description": "",
            "items": {
              "@ref": "local:GlobalSettingsFooterNavigationSectionsLinks"
            },
            "type": "array",
            "@mapping": "takeshape:local:GlobalSettingsFooterNavigationSections.liJgMZjNd"
          }
        },
        "required": [
          "title"
        ]
      }
    },
    "GlobalSettingsFooterNavigation": {
      "id": "BVejkzfQu",
      "name": "GlobalSettingsFooterNavigation",
      "title": "Global Settings Footer Navigation",
      "schema": {
        "type": "object",
        "properties": {
          "sections": {
            "title": "Sections",
            "description": "",
            "items": {
              "@ref": "local:GlobalSettingsFooterNavigationSections"
            },
            "maxItems": 2,
            "type": "array",
            "@mapping": "takeshape:local:GlobalSettingsFooterNavigation.fGXdJIAMv"
          }
        }
      }
    },
    "GlobalSettingsFooter": {
      "id": "jXrAa-iFi",
      "name": "GlobalSettingsFooter",
      "title": "Global Settings Footer",
      "schema": {
        "type": "object",
        "properties": {
          "info": {
            "title": "Info",
            "description": "",
            "@ref": "local:GlobalSettingsFooterInfo",
            "@mapping": "takeshape:local:GlobalSettingsFooter.e-TPyEX3x"
          },
          "navigation": {
            "title": "Navigation",
            "description": "",
            "@ref": "local:GlobalSettingsFooterNavigation",
            "@mapping": "takeshape:local:GlobalSettingsFooter.BVejkzfQu"
          }
        }
      }
    },
    "GlobalSettings": {
      "id": "k8CufJ-ZM",
      "name": "GlobalSettings",
      "title": "Global Settings",
      "workflow": "default",
      "model": {
        "type": "single"
      },
      "schema": {
        "type": "object",
        "properties": {
          "header": {
            "title": "Header",
            "description": "",
            "@ref": "local:GlobalSettingsHeader",
            "@mapping": "takeshape:local:GlobalSettings.85RA1oGcB"
          },
          "footer": {
            "title": "Footer",
            "description": "",
            "@ref": "local:GlobalSettingsFooter",
            "@mapping": "takeshape:local:GlobalSettings.jXrAa-iFi"
          }
        }
      }
    },
    "ProductAdditionalDetailsListInterface": {
      "id": "ProductAdditionalDetailsListInterface",
      "name": "ProductAdditionalDetailsListInterface",
      "title": "ProductAdditionalDetailsListInterface",
      "description": "ProductAdditionalDetailsListInterface",
      "schema": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "_version": {
            "type": "number"
          },
          "_status": {
            "type": "string",
            "@workflow": "default"
          },
          "item": {
            "minLength": 1,
            "type": "string",
            "title": "Item"
          }
        },
        "required": [
          "item"
        ]
      }
    },
    "ProductAdditionalDetailsList": {
      "id": "GG0dmS2Cp",
      "name": "ProductAdditionalDetailsList",
      "title": "Product AdditionalDetails List",
      "schema": {
        "type": "object",
        "properties": {
          "item": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Item",
            "@mapping": "takeshape:local:ProductAdditionalDetailsList.-x_Kag7ar"
          }
        },
        "required": [
          "item"
        ]
      }
    },
    "ProductAdditionalDetailsInterface": {
      "id": "ProductAdditionalDetailsInterface",
      "name": "ProductAdditionalDetailsInterface",
      "title": "ProductAdditionalDetailsInterface",
      "description": "ProductAdditionalDetailsInterface",
      "schema": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "_version": {
            "type": "number"
          },
          "_status": {
            "type": "string",
            "@workflow": "default"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "title": "Name"
          },
          "list": {
            "title": "List",
            "items": {
              "@ref": "local:ProductAdditionalDetailsListInterface"
            },
            "type": "array"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    "ProductAdditionalDetails": {
      "id": "K05wP-xkq",
      "name": "ProductAdditionalDetails",
      "title": "Product AdditionalDetails",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Name",
            "@mapping": "takeshape:local:ProductAdditionalDetails.sNpUcIhEi"
          },
          "list": {
            "title": "List",
            "description": "",
            "items": {
              "@ref": "local:ProductAdditionalDetailsList"
            },
            "type": "array",
            "@mapping": "takeshape:local:ProductAdditionalDetails.GG0dmS2Cp"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    "FaqOneColumnComponentFaQs": {
      "id": "kEgLdMv9y",
      "name": "FaqOneColumnComponentFaQs",
      "title": "Faq One Column Component FaQs",
      "schema": {
        "type": "object",
        "properties": {
          "question": {
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Question",
            "@mapping": "takeshape:local:FaqOneColumnComponentFaQs.OtNf9jexm"
          },
          "answer": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Answer",
            "@mapping": "takeshape:local:FaqOneColumnComponentFaQs.v7KjohB1U"
          }
        },
        "required": [
          "question",
          "answer"
        ]
      }
    },
    "FaqOneColumnComponent": {
      "id": "PUGYU7N-6",
      "name": "FaqOneColumnComponent",
      "title": "Faq One Column Component",
      "schema": {
        "type": "object",
        "properties": {
          "heading": {
            "minLength": 0,
            "type": "string",
            "description": "",
            "title": "Heading",
            "@mapping": "takeshape:local:FaqOneColumnComponent.XHGE_NZ_Q"
          },
          "subheading": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Subheading",
            "@mapping": "takeshape:local:FaqOneColumnComponent.nc_IvoUvt"
          },
          "faQs": {
            "title": "FAQs",
            "description": "",
            "items": {
              "@ref": "local:FaqOneColumnComponentFaQs"
            },
            "type": "array",
            "@mapping": "takeshape:local:FaqOneColumnComponent.kEgLdMv9y"
          }
        }
      }
    },
    "GlobalSettingsFooterInfo": {
      "id": "e-TPyEX3x",
      "name": "GlobalSettingsFooterInfo",
      "title": "Global Settings Footer Info",
      "schema": {
        "type": "object",
        "properties": {
          "heading": {
            "type": "string",
            "minLength": 0,
            "description": "",
            "title": "Heading",
            "@mapping": "takeshape:local:GlobalSettingsFooterInfo.PQ8Vri8wj"
          },
          "description": {
            "type": "object",
            "@tag": "draftjs",
            "description": "",
            "title": "Description",
            "@mapping": "takeshape:local:GlobalSettingsFooterInfo.vTGn5N9nj"
          }
        }
      }
    },
    "PolicySeo": {
      "id": "8jPo3mgmf",
      "name": "PolicySeo",
      "title": "Policy Seo",
      "schema": {
        "type": "object",
        "properties": {
          "metaTitle": {
            "type": "string",
            "minLength": 0,
            "description": "",
            "title": "Meta Title",
            "@mapping": "takeshape:local:PolicySeo.zr8wnrL0s"
          },
          "metaDescription": {
            "type": "string",
            "minLength": 0,
            "description": "",
            "title": "Meta Description",
            "@mapping": "takeshape:local:PolicySeo.2PxWBydSf"
          }
        }
      }
    },
    "Policy": {
      "id": "QYKDH_HhW",
      "name": "Policy",
      "title": "Policy",
      "workflow": "default",
      "model": {
        "type": "multiple"
      },
      "schema": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1,
            "description": "",
            "title": "Title",
            "@mapping": "takeshape:local:Policy.4Rwr0c57E"
          },
          "slug": {
            "@derivedFrom": "title",
            "pattern": "^[\\w-]*$",
            "minLength": 1,
            "type": "string",
            "description": "",
            "title": "Slug",
            "@mapping": "takeshape:local:Policy.o-uzkYMTA"
          },
          "seo": {
            "title": "SEO",
            "description": "",
            "@ref": "local:PolicySeo",
            "@mapping": "takeshape:local:Policy.8jPo3mgmf"
          },
          "sections": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "@ref": "local:PageSectionTitle"
                },
                {
                  "@ref": "local:PageSectionMdx"
                }
              ]
            },
            "description": "",
            "title": "Sections",
            "@mapping": "takeshape:local:Policy.vombujmOj"
          }
        },
        "required": [
          "title",
          "slug"
        ]
      }
    },
    "TrustpilotProductReviews": {
      "id": "TrustpilotProductReviews",
      "name": "TrustpilotProductReviews",
      "title": "Trustpilot Product Reviews",
      "schema": {
        "type": "object",
        "properties": {
          "productReviews": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "stars": {
                  "type": "integer"
                },
                "content": {
                  "type": "string"
                },
                "consumer": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "displayName"
                  ]
                },
                "language": {
                  "type": "string"
                },
                "attributeRatings": {
                  "type": "array",
                  "items": {
                    "@ref": "local:TrustpilotAttributeRating"
                  }
                },
                "attachments": {
                  "type": "array",
                  "items": {
                    "@ref": "local:TrustpilotAttachment"
                  }
                }
              },
              "required": [
                "id",
                "createdAt",
                "stars",
                "content",
                "consumer"
              ]
            }
          },
          "links": {
            "type": "array",
            "items": {
              "@ref": "local:TrustpilotLink"
            }
          }
        },
        "required": [
          "productReviews",
          "links"
        ]
      }
    },
    "TrustpilotAttributeRating": {
      "id": "TrustpilotAttributeRating",
      "name": "TrustpilotAttributeRating",
      "title": "Trustpilot Attribute Rating",
      "schema": {
        "type": "object",
        "properties": {
          "attributeId": {
            "type": "string"
          },
          "attributeName": {
            "type": "string"
          },
          "rating": {
            "type": "integer"
          }
        }
      }
    },
    "TrustpilotAttachment": {
      "id": "TrustpilotAttachment",
      "name": "TrustpilotAttachment",
      "title": "Trustpilot Attachment",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "processedFiles": {
            "type": "array",
            "items": {
              "@ref": "local:TrustpilotAttachmentProcessedFiles"
            }
          }
        }
      }
    },
    "TrustpilotAttachmentProcessedFiles": {
      "id": "TrustpilotAttachmentProcessedFiles",
      "name": "TrustpilotAttachmentProcessedFiles",
      "title": "Trustpilot Attachment Processed FIles",
      "schema": {
        "type": "object",
        "properties": {
          "dimension": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      }
    },
    "TrustpilotLink": {
      "id": "TrustpilotLink",
      "name": "TrustpilotLink",
      "title": "Trustpilot Link",
      "schema": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "rel": {
            "type": "string"
          }
        }
      }
    },
    "TrustpilotProductReviewsSummary": {
      "id": "TrustpilotProductReviewsSummary",
      "name": "TrustpilotProductReviewsSummary",
      "title": "Trustpilot Product Reviews Summary",
      "schema": {
        "type": "object",
        "properties": {
          "starsAverage": {
            "type": "number"
          },
          "numberOfReviews": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer"
              },
              "oneStar": {
                "type": "integer"
              },
              "twoStars": {
                "type": "integer"
              },
              "threeStars": {
                "type": "integer"
              },
              "fourStars": {
                "type": "integer"
              },
              "fiveStars": {
                "type": "integer"
              }
            },
            "required": [
              "total",
              "oneStar",
              "twoStars",
              "threeStars",
              "fourStars",
              "fiveStars"
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "@ref": "local:TrustpilotLink"
            }
          }
        },
        "required": [
          "starsAverage",
          "numberOfReviews",
          "links"
        ]
      }
    },
    "Recharge_PaymentMethod": {
      "id": "Recharge_PaymentMethod",
      "title": "Recharge_PaymentMethod",
      "name": "Recharge_PaymentMethod",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "payment_details": {
            "type": "object",
            "properties": {
              "brand": {
                "type": "string"
              },
              "exp_month": {
                "type": "number"
              },
              "exp_year": {
                "type": "number"
              },
              "last4": {
                "type": "string"
              }
            },
            "required": [
              "brand",
              "exp_month",
              "exp_year",
              "last4"
            ]
          },
          "payment_type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "status_reason": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "customer_id",
          "created_at",
          "payment_details",
          "payment_type",
          "status",
          "status_reason",
          "updated_at"
        ]
      }
    },
    "Recharge_CreateNotificationResponse": {
      "name": "Recharge_CreateNotificationResponse",
      "title": "Recharge_CreateNotificationResponse",
      "id": "Recharge_CreateNotificationResponse",
      "schema": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string"
          }
        }
      }
    },
    "Recharge_Subscription": {
      "id": "Recharge_Subscription",
      "title": "Recharge_Subscription",
      "name": "Recharge_Subscription",
      "schema": {
        "type": "object",
        "properties": {
          "address_id": {
            "type": "string"
          },
          "cancelled_at": {
            "type": "string"
          },
          "charge_interval_frequency": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_prepaid": {
            "type": "boolean"
          },
          "is_skippable": {
            "type": "boolean"
          },
          "is_swappable": {
            "type": "boolean"
          },
          "next_charge_scheduled_at": {
            "type": "string"
          },
          "order_interval_frequency": {
            "type": "string"
          },
          "order_interval_unit": {
            "type": "string"
          },
          "presentment_currency": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "product_title": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "recharge_product_id": {
            "type": "string"
          },
          "shopify_product_id": {
            "type": "string"
          },
          "shopify_variant_id": {
            "type": "string"
          },
          "sku_override": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "EXPIRED",
              "CANCELLED"
            ]
          },
          "updated_at": {
            "type": "string"
          },
          "variant_title": {
            "type": "string"
          },
          "charges": {
            "type": "array",
            "items": {
              "@ref": "recharge:Charge"
            },
            "@resolver": {
              "name": "rest:get",
              "service": "recharge",
              "path": "/charges",
              "results": {
                "ops": [
                  {
                    "path": "$",
                    "mapping": "$finalResolver.charges"
                  }
                ]
              },
              "searchParams": {
                "ops": [
                  {
                    "path": "subscription_id",
                    "mapping": "$source.id"
                  }
                ]
              }
            }
          },
          "rechargeProduct": {
            "@ref": "recharge:Product",
            "@resolver": {
              "name": "rest:get",
              "service": "recharge",
              "path": {
                "ops": [
                  {
                    "path": "id",
                    "mapping": "$source.recharge_product_id"
                  }
                ],
                "serialize": {
                  "template": "/products/{id}"
                }
              },
              "results": {
                "ops": [
                  {
                    "path": "$",
                    "mapping": "$finalResolver.product"
                  }
                ]
              }
            }
          },
          "shopifyProductVariant": {
            "@ref": "shopify:ProductVariant",
            "@resolver": {
              "name": "graphql:query",
              "service": "shopify",
              "fieldName": "productVariant",
              "args": {
                "ops": [
                  {
                    "path": "id",
                    "mapping": [
                      [
                        "expressionEval",
                        {
                          "expression": "'gid://shopify/ProductVariant/' + $source.shopify_variant_id"
                        }
                      ]
                    ]
                  }
                ]
              }
            }
          },
          "address": {
            "@ref": "recharge:Address",
            "@resolver": {
              "name": "rest:get",
              "service": "recharge",
              "path": {
                "ops": [
                  {
                    "path": "id",
                    "mapping": "$source.address_id"
                  }
                ],
                "serialize": {
                  "template": "/addresses/{id}"
                }
              },
              "searchParams": {
                "ops": [
                  {
                    "path": "include",
                    "value": "payment_methods"
                  }
                ]
              },
              "results": {
                "ops": [
                  {
                    "path": "$",
                    "mapping": "$finalResolver.address"
                  }
                ]
              }
            }
          }
        },
        "required": [
          "id",
          "charge_interval_frequency",
          "created_at",
          "customer_id",
          "email",
          "is_prepaid",
          "is_skippable",
          "is_swappable",
          "order_interval_frequency",
          "order_interval_unit",
          "presentment_currency",
          "price",
          "product_title",
          "quantity",
          "recharge_product_id",
          "shopify_product_id",
          "sku_override",
          "status",
          "updated_at",
          "variant_title",
          "address",
          "charges",
          "rechargeProduct",
          "shopifyProductVariant"
        ]
      }
    },
    "Recharge_ChargeLineItem": {
      "id": "Recharge_ChargeLineItem",
      "title": "Recharge_ChargeLineItem",
      "name": "Recharge_ChargeLineItem",
      "schema": {
        "type": "object",
        "properties": {
          "images": {
            "type": "object",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              },
              "original": {
                "type": "string"
              }
            }
          },
          "quantity": {
            "type": "integer"
          },
          "subscription_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "variant_title": {
            "type": "string"
          },
          "shopify_product_id": {
            "type": "string"
          },
          "shopify_variant_id": {
            "type": "string"
          },
          "price": {
            "type": "string"
          }
        },
        "required": [
          "images",
          "quantity",
          "subscription_id",
          "title",
          "variant_title",
          "shopify_product_id",
          "shopify_variant_id",
          "price"
        ]
      }
    },
    "Recharge_Charge": {
      "id": "Recharge_Charge",
      "title": "Recharge_Charge",
      "name": "Recharge_Charge",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "scheduled_at": {
            "type": "string"
          },
          "processed_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "line_items": {
            "type": "array",
            "items": {
              "@ref": "recharge:ChargeLineItem"
            }
          },
          "currency": {
            "type": "string"
          },
          "shopify_order_id": {
            "type": "string"
          },
          "shopifyOrder": {
            "@ref": "shopify:Order",
            "@resolver": {
              "if": "!isNull($source.shopify_order_id)",
              "name": "graphql:query",
              "service": "shopify",
              "fieldName": "order",
              "args": {
                "ops": [
                  {
                    "path": "id",
                    "mapping": [
                      [
                        "get",
                        {
                          "path": "$source.shopify_order_id"
                        }
                      ],
                      [
                        "format",
                        {
                          "template": "gid://shopify/Order/%s"
                        }
                      ]
                    ]
                  }
                ]
              }
            }
          },
          "status": {
            "type": "string"
          },
          "address_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "scheduled_at",
          "updated_at",
          "line_items",
          "currency"
        ]
      }
    },
    "Recharge_Address": {
      "id": "Recharge_Address",
      "title": "Recharge_Address",
      "name": "Recharge_Address",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "include": {
            "type": "object",
            "properties": {
              "payment_methods": {
                "type": "array",
                "items": {
                  "@ref": "recharge:PaymentMethod"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "address1",
          "address2",
          "city",
          "first_name",
          "last_name",
          "province",
          "zip"
        ]
      }
    },
    "Recharge_Product": {
      "id": "Recharge_Product",
      "title": "Recharge_Product",
      "name": "Recharge_Product",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "discount_amount": {
            "type": "number"
          },
          "subscription_defaults": {
            "type": "object",
            "properties": {
              "order_interval_frequency_options": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "order_interval_frequency_options"
            ]
          }
        },
        "required": [
          "id",
          "discount_amount",
          "subscription_defaults"
        ]
      }
    },
    "Recharge_Onetime": {
      "id": "Recharge_Onetime",
      "title": "Recharge_Onetime",
      "name": "Recharge_Onetime",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      }
    }
  },
  "schemaVersion": "3.23.0",
  "indexedShapes": {
    "Shopify_Product": {
      "queries": {
        "list": {
          "name": "Shopify_products"
        },
        "get": {
          "name": "Shopify_product"
        }
      },
      "triggers": [
        {
          "type": "schedule",
          "query": "list",
          "interval": 1440
        },
        {
          "type": "webhook",
          "query": "get",
          "service": "shopify",
          "events": [
            "products/create",
            "products/update",
            "products/delete"
          ]
        }
      ],
      "query": {
        "maxDepth": 2
      }
    }
  }
}
